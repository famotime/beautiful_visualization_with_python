<?xml version='1.0'?>
<opml version='2.0'>
  <head>
    <ownerEmail>
      quincy.zou@gmail.com
    </ownerEmail>
  </head>
  <body>
  <outline text="_图11-2-3 带显著性标注的箱型图和小提琴图&#10;" _note="import pandas as pd&#10;import numpy as np&#10;import seaborn as sns&#10;from plotnine import *&#10;from scipy import stats&#10;&#10;&#10;df_iris = sns.load_dataset(&quot;iris&quot;)&#10;df_group = df_iris.groupby(df_iris['species'], as_index=False).median()&#10;df_group = df_group.sort_values(by=&quot;sepal_width&quot;, ascending=False)&#10;df_iris['species'] = pd.Categorical(df_iris['species'], categories=df_group['species'], ordered=True)&#10;df_iris&#10;&#10;```&#10;&#10;```python&#10;group = df_group['species']&#10;N = len(group)&#10;df_pvalue = pd.DataFrame(data=np.zeros((N, 4)), columns=[&#10;                         'species1', 'species2', 'pvalue', 'group'])&#10;n = 0&#10;for i in range(N):&#10;    for j in range(i+1, N):&#10;        rvs1 = df_iris.loc[df_iris['species'].eq(group[i]), 'sepal_width']&#10;        rvs2 = df_iris.loc[df_iris['species'].eq(group[j]), 'sepal_width']&#10;        # t,p=stats.wilcoxon(rvs1,rvs2,zero_method='wilcox', correction=False)  # wilcox.test()&#10;        t, p = stats.ttest_ind(rvs1, rvs2)   # t.test()&#10;        df_pvalue.loc[n, :] = [i, j, format(p, '.3e'), n]&#10;        n = n+1&#10;df_pvalue['y'] = [4.5, 5., 5.4]&#10;&#10;&#10;# --------------------------------------(b)带显著性标注的箱型图------------------------------------------------&#10;base_plot = (ggplot() +&#10;             geom_boxplot(df_iris, aes('species', 'sepal_width', fill='species'), width=0.65) +&#10;&#10;             # geom_violin(df_iris, aes('species', 'sepal_width', fill = 'species'),width=0.65)+&#10;             geom_jitter(df_iris, aes('species', 'sepal_width', fill='species'), width=0.15) +&#10;             scale_fill_hue(s=0.99, l=0.65, h=0.0417, color_space='husl') +&#10;&#10;             geom_segment(df_pvalue, aes(x='species1+1', y='y', xend='species2+1', yend='y', group='group')) +&#10;             geom_segment(df_pvalue, aes(x='species1+1', y='y-0.1', xend='species1+1', yend='y', group='group')) +&#10;             geom_segment(df_pvalue, aes(x='species2+1', y='y-0.1', xend='species2+1', yend='y', group='group')) +&#10;             geom_text(df_pvalue, aes(x='(species1+species2)/2+1', y='y+0.1', label='pvalue', group='group'), ha='center') +&#10;             ylim(2, 5.5) +&#10;             theme_matplotlib() +&#10;             theme(figure_size=(6, 6),&#10;                   legend_position='none',&#10;                   text=element_text(size=14, colour=&quot;black&quot;)))&#10;print(base_plot)&#10;&#10;```&#10;&#10;```python&#10;# -------------------------------------(c)带显著性标注的小提琴图-------------------------------------------------&#10;base_plot = (ggplot() +&#10;             # geom_boxplot(df_iris, aes('species', 'sepal_width', fill = 'species'),width=0.65) +&#10;&#10;             geom_violin(df_iris, aes('species', 'sepal_width', fill='species'), width=0.65) +&#10;             geom_jitter(df_iris, aes('species', 'sepal_width', fill='species'), width=0.15) +&#10;             scale_fill_hue(s=0.99, l=0.65, h=0.0417, color_space='husl') +&#10;&#10;             geom_segment(df_pvalue, aes(x='species1+1', y='y', xend='species2+1', yend='y', group='group')) +&#10;             geom_segment(df_pvalue, aes(x='species1+1', y='y-0.1', xend='species1+1', yend='y', group='group')) +&#10;             geom_segment(df_pvalue, aes(x='species2+1', y='y-0.1', xend='species2+1', yend='y', group='group')) +&#10;             geom_text(df_pvalue, aes(x='(species1+species2)/2+1', y='y+0.1', label='pvalue', group='group'), ha='center') +&#10;             ylim(2, 5.5) +&#10;             theme_matplotlib() +&#10;             theme(figure_size=(6, 6),&#10;                   legend_position='none',&#10;                   text=element_text(size=14, colour=&quot;black&quot;)))&#10;print(base_plot)&#10;&#10;```&#10;&#10;" />
  </outline>
  </body>
</opml>