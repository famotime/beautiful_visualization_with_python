<?xml version='1.0'?>
<opml version='2.0'>
  <head>
    <ownerEmail>
      quincy.zou@gmail.com
    </ownerEmail>
  </head>
  <body>
  <outline text="中国疫情新冠肺炎COVID-19动图&#10;" _note="import pandas as pd&#10;import numpy as np&#10;import seaborn as sns&#10;import matplotlib.pyplot as plt&#10;from matplotlib.font_manager import FontProperties&#10;from matplotlib.backends.backend_agg import FigureCanvasAgg&#10;from matplotlib.patches import Polygon&#10;from matplotlib.collections import PatchCollection&#10;from mpl_toolkits.basemap import Basemap&#10;import matplotlib.dates as mdates&#10;import matplotlib as mpl&#10;plt.rcParams['font.sans-serif']=['SimHei']  # 用来正常显示中文标签&#10;plt.rcParams['axes.unicode_minus']=False    # 用来正常显示负号&#10;&#10;%matplotlib inline&#10;```&#10;&#10;```python&#10;import warnings&#10;warnings.filterwarnings('ignore')&#10;```&#10;&#10;```python&#10;&#10;fig = plt.figure(figsize=(12,12))&#10;ax = fig.gca()&#10;&#10;basemap = Basemap(llcrnrlon= 80,llcrnrlat=10,urcrnrlon=150,urcrnrlat=50,projection='poly',lon_0 = 116.65,lat_0 = 40.02,ax = ax)&#10;basemap.readshapefile(shapefile = 'C:/Users/Peter_Zhang/Desktop/Hex_Map/china_shapefiles_master/china',&#10;                      name = &quot;province&quot;, drawbounds=True)&#10;basemap.readshapefile('C:/Users/Peter_Zhang/Desktop/Hex_Map/china_shapefiles_master/china_nine_dotted_line',&#10;                       name ='section', drawbounds=True)&#10;ax.spines['right'].set_color('none')&#10;ax.spines['top'].set_color('none')&#10;ax.spines['left'].set_color('none')&#10;ax.spines['bottom'].set_color('none')&#10;&#10;&#10;df_mapData = pd.DataFrame(basemap.province_info)&#10;df_mapData['OWNER'] = [x.strip('\x00') for x in df_mapData['OWNER']] # 省份&#10;df_mapData['FCNAME'] =[x.strip('\x00') for x in df_mapData['FCNAME']]&#10;&#10;province=np.unique(df_mapData['OWNER'])&#10;color = sns.husl_palette(len(province),h=15/360, l=.65, s=1).as_hex()&#10;colors = dict(zip(province.tolist(),color))&#10;&#10;&#10;for info, shape in zip(basemap.province_info, basemap.province): &#10;        pname = info['OWNER'].strip('\x00')&#10;        fcname = info['FCNAME'].strip('\x00')&#10;        if pname != fcname: # 不绘制海岛&#10;            continue&#10;        color = colors[pname]&#10;        &#10;        poly = Polygon(shape, facecolor=color, edgecolor='k')&#10;        ax.add_patch(poly) &#10;&#10;&#10;ax2= fig.add_axes([0.7, 0.25, 0.15, 0.15])&#10;basemap2 = Basemap(llcrnrlon= 106.55,llcrnrlat=4.61,urcrnrlon=123.58,urcrnrlat=25.45,projection='poly',lon_0 = 116.65,lat_0 = 40.02,ax = ax2)&#10;basemap2.readshapefile(shapefile = 'C:/Users/Peter_Zhang/Desktop/Hex_Map/china_shapefiles_master/china',&#10;                      name = &quot;province&quot;, drawbounds=True)&#10;basemap2.readshapefile('C:/Users/Peter_Zhang/Desktop/Hex_Map/china_shapefiles_master/china_nine_dotted_line',&#10;                       name ='section', drawbounds=True)&#10;&#10;for info, shape in zip(basemap2.province_info, basemap2.province): &#10;        pname = info['OWNER'].strip('\x00')&#10;        fcname = info['FCNAME'].strip('\x00')&#10;        if pname != fcname: # 不绘制海岛&#10;            continue       &#10;        color = colors[pname] &#10;        poly = Polygon(shape, facecolor=color, edgecolor='k')&#10;        ax2.add_patch(poly)&#10;```&#10;```&#10;&amp;lt;Figure size 864x864 with 2 Axes&amp;gt;&#10;```&#10;&#10;```python&#10;from datetime import datetime&#10;from matplotlib import cm,colors&#10;&#10;df_data=pd.read_csv('C:/Users/Peter_Zhang/Desktop/Hex_Map/DXYArea.csv')&#10;df_data['updateTime']=[datetime.strptime(d, '%Y-%m-%d %H:%M:%S.%f').date() for d in df_data['updateTime']]&#10;&#10;&#10;df_data['month']=[d.month for d in df_data['updateTime']]&#10;df_data['day']=[d.strftime('%d') for d in df_data['updateTime']]&#10;df_data['date']=[d.strftime('%m-%d') for d in df_data['updateTime']]&#10;df_data=df_data.drop_duplicates(subset = ['month','day','provinceName']).reset_index()&#10;&#10;labels = [ '1-9', '10-99', '100-999', '1000-10000','&amp;gt;10000']&#10;n_colors=len(labels)&#10;color=[colors.rgb2hex(x) for x in cm.get_cmap( 'YlOrRd',n_colors)(np.linspace(0, 1, n_colors))]&#10;color_array=[x for x in cm.get_cmap( 'YlOrRd',n_colors)(np.linspace(0, 1, n_colors))]&#10;&#10;df_data['lablels']=pd.cut(df_data['province_confirmedCount'], [0,10,100,1000,10000,100000], labels=labels)&#10;df_data['color']=[color[i] for i in df_data['lablels'].values.codes]&#10;df_data=df_data.set_index('provinceName',drop=False)&#10;&#10;days=[ '24', '25', '26', '27', '28', '29', '30', '31','01', '02', '03']# np.unique(df_data['day'])&#10;&#10;df_day=df_data[df_data['day']==days[7]][['provinceName','province_confirmedCount','day','month','color','date']]&#10;&#10;```&#10;```&#10;&amp;lt;bound method NDFrame.head of              provinceName  province_confirmedCount day  month    color   date&#10;provinceName                                                                 &#10;浙江省                   浙江省                      538  31      1  #fd8d3c  01-31&#10;湖北省                   湖北省                     5806  31      1  #e31a1c  01-31&#10;广东省                   广东省                      436  31      1  #fd8d3c  01-31&#10;江苏省                   江苏省                      168  31      1  #fd8d3c  01-31&#10;内蒙古自治区             内蒙古自治区                       20  31      1  #fed976  01-31&#10;贵州省                   贵州省                       29  31      1  #fed976  01-31&#10;云南省                   云南省                       83  31      1  #fed976  01-31&#10;新疆维吾尔自治区         新疆维吾尔自治区                       17  31      1  #fed976  01-31&#10;上海市                   上海市                      135  31      1  #fd8d3c  01-31&#10;海南省                   海南省                       52  31      1  #fed976  01-31&#10;北京市                   北京市                      139  31      1  #fd8d3c  01-31&#10;重庆市                   重庆市                      211  31      1  #fd8d3c  01-31&#10;山东省                   山东省                      184  31      1  #fd8d3c  01-31&#10;河南省                   河南省                      352  31      1  #fd8d3c  01-31&#10;吉林省                   吉林省                       14  31      1  #fed976  01-31&#10;辽宁省                   辽宁省                       48  31      1  #fed976  01-31&#10;福建省                   福建省                      120  31      1  #fd8d3c  01-31&#10;天津市                   天津市                       32  31      1  #fed976  01-31&#10;陕西省                   陕西省                       87  31      1  #fed976  01-31&#10;宁夏回族自治区           宁夏回族自治区                       21  31      1  #fed976  01-31&#10;青海省                   青海省                        8  31      1  #ffffcc  01-31&#10;湖南省                   湖南省                      332  31      1  #fd8d3c  01-31&#10;黑龙江省                 黑龙江省                       59  31      1  #fed976  01-31&#10;江西省                   江西省                      240  31      1  #fd8d3c  01-31&#10;四川省                   四川省                      177  31      1  #fd8d3c  01-31&#10;安徽省                   安徽省                      237  31      1  #fd8d3c  01-31&#10;广西壮族自治区           广西壮族自治区                       87  31      1  #fed976  01-31&#10;河北省                   河北省                       82  31      1  #fed976  01-31&#10;甘肃省                   甘肃省                       29  31      1  #fed976  01-31&#10;山西省                   山西省                       39  31      1  #fed976  01-31&amp;gt;&#10;```&#10;&#10;```python&#10;&#10;fig = plt.figure(figsize=(12,12))&#10;ax = fig.gca()&#10;&#10;basemap = Basemap(llcrnrlon= 80,llcrnrlat=10,urcrnrlon=150,urcrnrlat=50,projection='poly',lon_0 = 116.65,lat_0 = 40.02,ax = ax)&#10;basemap.readshapefile(shapefile = 'C:/Users/Peter_Zhang/Desktop/Hex_Map/china_shapefiles_master/china',&#10;                      name = &quot;province&quot;, drawbounds=True)&#10;basemap.readshapefile('C:/Users/Peter_Zhang/Desktop/Hex_Map/china_shapefiles_master/china_nine_dotted_line',&#10;                       name ='section', drawbounds=True)&#10;ax.spines['right'].set_color('none')&#10;ax.spines['top'].set_color('none')&#10;ax.spines['left'].set_color('none')&#10;ax.spines['bottom'].set_color('none')&#10;&#10;for info, shape in zip(basemap.province_info, basemap.province): &#10;        pname = info['OWNER'].strip('\x00')&#10;        fcname = info['FCNAME'].strip('\x00')&#10;        if pname != fcname: # 不绘制海岛&#10;            continue&#10;        &#10;        color='white'&#10;        if sum(df_day['provinceName']==pname)&amp;gt;0:&#10;            color = df_day.loc[pname,'color']&#10;        &#10;        poly = Polygon(shape, facecolor=color, edgecolor='k')&#10;        ax.add_patch(poly) &#10;&#10;patches = [ mpatches.Patch(color=color_array[i], label=labels[i]) for i in range(n_colors) ]&#10;# put those patched as legend-handles into the legend&#10;legend=ax.legend(handles=patches, borderaxespad=0,loc=&quot;center right&quot;,markerscale=1.3,&#10;          edgecolor='none',facecolor='none',fontsize=15,title='')&#10;    &#10;ax.text(0.02,1.05, s='全国各省新型冠状病毒疫情状况', transform=ax.transAxes, size=25, color='k')&#10;ax.text(0.02,1.0, s='全国新型冠状病毒确诊总数为：'+str(df_day['province_confirmedCount'].sum())+';  湖北省新型冠状病毒确诊总数为:'+ str(df_day.loc['湖北省','province_confirmedCount']),&#10;        transform=ax.transAxes, size=15,weight='light', color='k')&#10;ax.text(0.05,0.22, s=df_day['date'][0], transform=ax.transAxes, size=60, color='gray',weight='bold',family='Arial')&#10;ax.text(0.02,0.05, s='数据来源：https://github.com/BlankerL/DXY-2019-nCoV-Data/blame/master/DXYArea.csv', transform=ax.transAxes, size=10, color='k')    &#10;    &#10;        &#10;    &#10;ax2= fig.add_axes([0.7, 0.25, 0.15, 0.15])&#10;basemap2 = Basemap(llcrnrlon= 106.55,llcrnrlat=4.61,urcrnrlon=123.58,urcrnrlat=25.45,projection='poly',lon_0 = 116.65,lat_0 = 40.02,ax = ax2)&#10;basemap2.readshapefile(shapefile = 'C:/Users/Peter_Zhang/Desktop/Hex_Map/china_shapefiles_master/china',&#10;                      name = &quot;province&quot;, drawbounds=True)&#10;basemap2.readshapefile('C:/Users/Peter_Zhang/Desktop/Hex_Map/china_shapefiles_master/china_nine_dotted_line',&#10;                       name ='section', drawbounds=True)&#10;&#10;for info, shape in zip(basemap2.province_info, basemap2.province): &#10;        pname = info['OWNER'].strip('\x00')&#10;        fcname = info['FCNAME'].strip('\x00')&#10;        if pname != fcname: # 不绘制海岛&#10;            continue &#10;            &#10;        color='white'&#10;        if sum(df_day['provinceName']==pname)&amp;gt;0:&#10;            color = df_day.loc[pname,'color']&#10;        poly = Polygon(shape, facecolor=color, edgecolor='k')&#10;        ax2.add_patch(poly)&#10;        &#10;```&#10;```&#10;&amp;lt;Figure size 864x864 with 2 Axes&amp;gt;&#10;```&#10;&#10;```python&#10;&#10;def draw_ChinaMap(Num_day):&#10;    ax.clear()&#10;    &#10;    df_day=df_data[df_data['day']==days[Num_day]][['provinceName','province_confirmedCount','day','month','color','date']]&#10;    &#10;    basemap = Basemap(llcrnrlon= 80,llcrnrlat=10,urcrnrlon=150,urcrnrlat=50,projection='poly',lon_0 = 116.65,lat_0 = 40.02,ax = ax)&#10;    basemap.readshapefile(shapefile = 'C:/Users/Peter_Zhang/Desktop/Hex_Map/china_shapefiles_master/china',&#10;                      name = &quot;province&quot;, drawbounds=True)&#10;    basemap.readshapefile('C:/Users/Peter_Zhang/Desktop/Hex_Map/china_shapefiles_master/china_nine_dotted_line',&#10;                       name ='section', drawbounds=True)&#10;    ax.spines['right'].set_color('none')&#10;    ax.spines['top'].set_color('none')&#10;    ax.spines['left'].set_color('none')&#10;    ax.spines['bottom'].set_color('none')&#10;&#10;&#10;    for info, shape in zip(basemap.province_info, basemap.province): &#10;            pname = info['OWNER'].strip('\x00')&#10;            fcname = info['FCNAME'].strip('\x00')&#10;            if pname != fcname: # 不绘制海岛&#10;                continue&#10;        &#10;            color='white'&#10;            if sum(df_day['provinceName']==pname)&amp;gt;0:&#10;                color = df_day.loc[pname,'color']&#10;        &#10;            poly = Polygon(shape, facecolor=color, edgecolor='k')&#10;            ax.add_patch(poly) &#10;&#10;    patches = [ mpatches.Patch(color=color_array[i], label=labels[i]) for i in range(n_colors) ]&#10;    # put those patched as legend-handles into the legend&#10;    legend=ax.legend(handles=patches, borderaxespad=0,loc=&quot;center right&quot;,markerscale=1.3,&#10;          edgecolor='none',facecolor='none',fontsize=15,title='')&#10;    &#10;    ax.text(0.02,1.07, s='全国各省新型冠状病毒疫情状况', transform=ax.transAxes, size=30, weight='bold',color='k')&#10;    ax.text(0.02,1.0, s='全国新型冠状病毒确诊总数为：'+str(df_day['province_confirmedCount'].sum())+';  湖北省新型冠状病毒确诊总数为:'+ str(df_day.loc['湖北省','province_confirmedCount']),&#10;        transform=ax.transAxes, size=20,weight='light', color='k')&#10;    ax.text(0.05,0.22, s=df_day['date'][0], transform=ax.transAxes, size=70, color='gray',weight='bold',family='Arial')&#10;    ax.text(0.02,0.05, s='数据来源：https://github.com/BlankerL/DXY-2019-nCoV-Data/blame/master/DXYArea.csv', transform=ax.transAxes, size=10, color='k')    &#10;    &#10;        &#10;    &#10;    basemap2 = Basemap(llcrnrlon= 106.55,llcrnrlat=4.61,urcrnrlon=123.58,urcrnrlat=25.45,projection='poly',lon_0 = 116.65,lat_0 = 40.02,ax = ax2)&#10;    basemap2.readshapefile(shapefile = 'C:/Users/Peter_Zhang/Desktop/Hex_Map/china_shapefiles_master/china',&#10;                      name = &quot;province&quot;, drawbounds=True)&#10;    basemap2.readshapefile('C:/Users/Peter_Zhang/Desktop/Hex_Map/china_shapefiles_master/china_nine_dotted_line',&#10;                       name ='section', drawbounds=True)&#10;&#10;    for info, shape in zip(basemap2.province_info, basemap2.province): &#10;            pname = info['OWNER'].strip('\x00')&#10;            fcname = info['FCNAME'].strip('\x00')&#10;            if pname != fcname: # 不绘制海岛&#10;                continue &#10;            &#10;            color='white'&#10;            if sum(df_day['provinceName']==pname)&amp;gt;0:&#10;                color = df_day.loc[pname,'color']&#10;            poly = Polygon(shape, facecolor=color, edgecolor='k')&#10;            ax2.add_patch(poly)&#10;        &#10;fig = plt.figure(figsize=(12,12))&#10;ax = fig.gca()&#10;ax2= fig.add_axes([0.75, 0.2, 0.15, 0.15])&#10;plt.subplots_adjust(left=0.12, right=0.98, top=0.85, bottom=0.1)   &#10;draw_ChinaMap(2)&#10;```&#10;```&#10;&amp;lt;Figure size 864x864 with 2 Axes&amp;gt;&#10;```&#10;&#10;```python&#10;import matplotlib.animation as animation&#10;from IPython.display import HTML&#10;fig = plt.figure(figsize=(12,12))&#10;ax = fig.gca()&#10;ax2= fig.add_axes([0.75, 0.2, 0.15, 0.15])&#10;plt.subplots_adjust(left=0.12, right=0.98, top=0.85, bottom=0.1)    &#10;animator = animation.FuncAnimation(fig, draw_ChinaMap, frames=np.arange(0,len(days),1),interval=1000)&#10;HTML(animator.to_jshtml()) &#10;# or use animator.to_html5_video() or animator.save()&#10;```&#10;```&#10;&amp;lt;IPython.core.display.HTML object&amp;gt;&#10;```&#10;&#10;" />
  </outline>
  </body>
</opml>