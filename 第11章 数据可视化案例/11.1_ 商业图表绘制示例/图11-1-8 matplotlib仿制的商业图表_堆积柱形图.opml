<?xml version='1.0'?>
<opml version='2.0'>
  <head>
    <ownerEmail>
      quincy.zou@gmail.com
    </ownerEmail>
  </head>
  <body>
  <outline text="图11-1-8 matplotlib仿制的商业图表_堆积柱形图&#10;" _note="# from matplotlib import cm,colors&#10;from matplotlib import pyplot as plt&#10;import pandas as pd&#10;import numpy as np&#10;&#10;df = pd.read_csv(&quot;商业图表_堆积柱形图.csv&quot;, engine='python', index_col=0)&#10;meanRow_df = df.apply(lambda x: x.mean(), axis=0)&#10;Sing_df = meanRow_df.sort_values(ascending=False).index&#10;&#10;display(df, meanRow_df, Sing_df)&#10;```&#10;```&#10;      Latin America  Central Europe,\nMiddle East, Africa  Western Europe  \&#10;year                                                                        &#10;2011             10                                    20              45   &#10;2012             30                                    50              65   &#10;2013             60                                    70              80   &#10;2014            170                                   190             230   &#10;2015            200                                   300             400   &#10;&#10;      North America  Asia-Pacific  &#10;year                               &#10;2011             95            80  &#10;2012            120           160  &#10;2013            120           160  &#10;2014            500           750  &#10;2015            500          1300  &#10;```&#10;&#10;```python&#10;n_row, n_col = df.shape&#10;x_value = np.arange(n_row)&#10;colors = [&quot;# F28526&quot;, &quot;# 0671A8&quot;, &quot;# C72435&quot;, &quot;# C3A932&quot;, &quot;# 636466&quot;]&#10;width = 0.5&#10;# ===================================== (a)堆积柱形图====================================================&#10;fig, (ax1, ax2, ax3)=plt.subplots(1, 3, figsize=(17,5),dpi=100)&#10;bottom_y=np.zeros(n_row)&#10;for i in range(n_row):&#10;    label=Sing_df[i]&#10;    ax1.bar(x_value,df.loc[:,label],bottom=bottom_y,width=width,color=colors[i],label=label,edgecolor='k', linewidth=0.25)&#10;    bottom_y=bottom_y+df.loc[:,label].values&#10;ax1.set_xticks(x_value)&#10;ax1.set_xticklabels(df.index)&#10;ax1.legend(frameon=False)&#10;# plt.savefig('商业图表_堆积柱形图1.pdf',bbox_inches='tight', pad_inches=0.3)&#10;&#10;&#10;# ======================================= (b)堆积面积图.==================================================&#10;x = []&#10;for i in range(n_row):&#10;    x = x+[i-width/2, i, i+width/2]&#10;df_area = pd.DataFrame(index=x)&#10;&#10;for j in list(range(n_col))[::-1]:&#10;    y = []&#10;    for i in range(n_row):&#10;        y = y+np.repeat(df.iloc[i, j], 3).tolist()&#10;    df_area[df.columns[j]] = y&#10;&#10;ax2.stackplot(df_area.index.values, df_area.values.T,colors=colors,labels=Sing_df,linewidth=0.1,edgecolor ='w',alpha=1)&#10;ax2.set_xticks(x_value)&#10;ax2.set_xticklabels(df.index)&#10;ax2.legend(loc=&quot;upper left&quot;, frameon=False)&#10;# plt.savefig('商业图表_堆积柱形图2.pdf',bbox_inches='tight', pad_inches=0.3)&#10;&#10;&#10;fig=plt.figure(figsize=(5,5),dpi=100)&#10;ax3.stackplot(df_area.index.values, df_area.values.T,colors=colors,linewidth=0.1,edgecolor ='w',alpha=0.25)&#10;bottom_y=np.zeros(n_row)&#10;for i in range(n_row):&#10;    label=Sing_df[i]&#10;    ax3.bar(x_value,df.loc[:,label],bottom=bottom_y,width=width,color=colors[i],label=label,edgecolor='w', linewidth=0.25)&#10;    bottom_y=bottom_y+df.loc[:,label].values&#10;ax3.set_xticks(x_value)&#10;ax3.set_xticklabels(df.index)&#10;ax3.legend(ncol=1,frameon=False)&#10;# plt.savefig('商业图表_堆积柱形图3.pdf',bbox_inches='tight', pad_inches=0.3)&#10;```&#10;```&#10;&amp;lt;matplotlib.legend.Legend at 0x1d8933d7be0&amp;gt;&#10;```&#10;&#10;```python&#10;# ==================================(c)组合图.=======================================================&#10;plt.rc('axes', axisbelow=True)&#10;plt.rcParams['axes.facecolor'] = '# EFEFEF'&#10;plt.rcParams['savefig.facecolor'] = '# EFEFEF'&#10;&#10;&#10;fig = plt.figure(figsize=(7, 5), dpi=100, facecolor='# EFEFEF')&#10;&#10;plt.stackplot(df_area.index.values, df_area.values.T,&#10;              colors=colors, linewidth=0.1, edgecolor='w', alpha=0.25)&#10;bottom_y = np.zeros(n_row)&#10;for i in range(n_row):&#10;    label = Sing_df[i]&#10;    plt.bar(x_value, df.loc[:, label], bottom=bottom_y, width=width,&#10;            color=colors[i], label=label, edgecolor='w', linewidth=0.25)&#10;&#10;    # plt.text(x=x_value[-1]*1.1,y=bottom_y[-1]+df.loc[:,label].values[-1]/2,s=label,verticalalignment='center')&#10;    plt.annotate(s=label, xy=(x_value[-1]+width/2*0.9, bottom_y[-1]+df.loc[:, label].values[-1]/2),&#10;                 xytext=(x_value[-1]*1.1, bottom_y[-1]+df.loc[:, label].values[-1]/2), color=colors[i],&#10;                 arrowprops=dict(facecolor='gray', arrowstyle='-'), verticalalignment='center', weight='bold')&#10;&#10;    bottom_y = bottom_y+df.loc[:, label].values&#10;plt.xlim(-0.5, 6.3)&#10;plt.xticks(x_value, df.index, size=10)  # 设置x轴刻度&#10;&#10;plt.grid(which='major', axis=&quot;y&quot;, linestyle='--',&#10;         linewidth='0.5', color='gray', alpha=0.5)&#10;&#10;ax = plt.gca()  # 删除左边和顶部的绘图区域边框线&#10;ax.spines['right'].set_color('none')&#10;ax.spines['top'].set_color('none')&#10;ax.spines['left'].set_color('none')&#10;&#10;plt.text(-0.5, 2500, s='3,000 petabytes per month',&#10;         weight='light', size=9, verticalalignment='bottom')&#10;plt.text(1, 1500, s='Estimated\nsmartphone data\ntraffic', weight='light',&#10;         size=13, verticalalignment='center', horizontalalignment='center')&#10;&#10;plt.text(-0.08, 1.07, s='Big Bites',&#10;         transform=ax.transAxes, weight='bold', size=15)&#10;plt.text(-0.08, 1.01, s='Data consumption on smartphones continues to grow.',&#10;         transform=ax.transAxes, weight='light', size=12)&#10;&#10;# plt.savefig('商业图表_堆积柱形图.pdf',bbox_inches='tight', pad_inches=0.3)&#10;plt.show()&#10;&#10;```&#10;```&#10;&amp;lt;Figure size 700x500 with 1 Axes&amp;gt;&#10;```&#10;&#10;```python&#10;&#10;```&#10;&#10;" />
  </outline>
  </body>
</opml>