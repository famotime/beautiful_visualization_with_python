<?xml version='1.0'?>
<opml version='2.0'>
  <head>
    <ownerEmail>
      quincy.zou@gmail.com
    </ownerEmail>
  </head>
  <body>
  <outline text="图8-3-2 点状华夫饼图&#10;" _note="import pandas as pd&#10;import numpy as np&#10;from plotnine import *&#10;from plotnine.data import mpg&#10;&#10;&#10;nrows = 10&#10;categ_table = (np.round(pd.value_counts(&#10;    mpg['class']) * ((nrows*nrows)/(len(mpg['class']))), 0)).astype(int)&#10;sort_table = categ_table.sort_values(ascending=False)&#10;a = np.arange(1, nrows+1, 1)&#10;b = np.arange(1, nrows+1, 1)&#10;X, Y = np.meshgrid(a, b)&#10;df_grid = pd.DataFrame({'x': X.flatten(), 'y': Y.flatten()})&#10;df_grid['category'] = pd.Categorical(np.repeat(sort_table.index, sort_table[:]),&#10;                                     categories=sort_table.index, ordered=False)&#10;df_grid&#10;&#10;```&#10;```&#10;     x   y category&#10;0    1   1      suv&#10;1    2   1      suv&#10;2    3   1      suv&#10;3    4   1      suv&#10;4    5   1      suv&#10;..  ..  ..      ...&#10;95   6  10  minivan&#10;96   7  10  minivan&#10;97   8  10  minivan&#10;98   9  10  2seater&#10;99  10  10  2seater&#10;&#10;[100 rows x 3 columns]&#10;```&#10;">
    <outline text="(b)百分比堆积型&#10;">
      <outline text="块状&#10;" _note="base_plot = (ggplot(df_grid, aes(x='x', y='y', fill='category')) +&#10;             geom_tile(color=&quot;white&quot;, size=0.25) +&#10;             # geom_point(color = &quot;black&quot;,shape='o',size=13) +&#10;             coord_fixed(ratio=1) +&#10;             scale_fill_brewer(type='qual', palette=&quot;Set2&quot;) +&#10;             theme_void() +&#10;             theme(panel_background=element_blank(),&#10;                   legend_position=&quot;right&quot;,&#10;                   aspect_ratio=1,&#10;                   figure_size=(5, 5),&#10;                   dpi=100))&#10;print(base_plot)&#10;&#10;```&#10;```&#10;&amp;lt;Figure size 500x503.247 with 1 Axes&amp;gt;&#10;```&#10;" />
      <outline text="点状&#10;" _note="base_plot = (ggplot(df_grid, aes(x='x', y='y', fill='category')) +&#10;             # geom_tile(color = &quot;white&quot;, size = 0.25) +&#10;             geom_point(color=&quot;black&quot;, shape='o', size=13) +&#10;             coord_fixed(ratio=1) +&#10;             # scale_x_continuous(trans = 'reverse') +# expand = c(0, 0),&#10;             # scale_y_continuous(trans = 'reverse') +# expand = c(0, 0),&#10;             scale_fill_brewer(type='qual', palette=&quot;Set2&quot;) +&#10;             theme(  # panel.border = element_rect(fill=NA,size = 2),&#10;    panel_background=element_blank(),&#10;    # axis.text = element_blank(),&#10;    # axis.title = element_blank(),&#10;    # axis.ticks = element_blank(),&#10;    # legend.title = element_blank(),&#10;    legend_position=&quot;right&quot;,&#10;    aspect_ratio=1,&#10;    figure_size=(5, 5),&#10;    dpi=100&#10;)&#10;)&#10;&#10;print(base_plot)&#10;&#10;```&#10;```&#10;&amp;lt;Figure size 500x503.247 with 1 Axes&amp;gt;&#10;```&#10;" />
  </outline>
    <outline text="(a)堆积型&#10;" _note="categ_table = (np.round(pd.value_counts(mpg['class']), 0)).astype(int)&#10;&#10;sort_table = categ_table.sort_values(ascending=False)&#10;&#10;ndeep = 10&#10;a = np.arange(1, ndeep+1, 1)&#10;b = np.arange(1, np.ceil(sort_table.sum()/ndeep)+1, 1)&#10;X, Y = np.meshgrid(a, b)&#10;df_grid = pd.DataFrame({'x': X.flatten(), 'y': Y.flatten()})&#10;&#10;&#10;category = np.repeat(sort_table.index, sort_table[:])&#10;df_grid = df_grid.loc[np.arange(0, len(category)), :]&#10;&#10;df_grid['category'] = pd.Categorical(category,&#10;                                     categories=sort_table.index,&#10;                                     ordered=False)&#10;df_grid&#10;```&#10;```&#10;      x     y category&#10;0     1   1.0      suv&#10;1     2   1.0      suv&#10;2     3   1.0      suv&#10;3     4   1.0      suv&#10;4     5   1.0      suv&#10;..   ..   ...      ...&#10;229  10  23.0  2seater&#10;230   1  24.0  2seater&#10;231   2  24.0  2seater&#10;232   3  24.0  2seater&#10;233   4  24.0  2seater&#10;&#10;[234 rows x 3 columns]&#10;```&#10;">
      <outline text="块状&#10;" _note="base_plot = (ggplot(df_grid, aes(x='y', y='x', fill='category')) +&#10;             geom_tile(color=&quot;white&quot;, size=0.25) +&#10;             # geom_point(color = &quot;black&quot;,shape='o',size=7) +&#10;             coord_fixed(ratio=1) +&#10;             xlab(&quot;1 square = 100&quot;) +&#10;             ylab(&quot;&quot;) +&#10;             scale_fill_brewer(type='qual', palette=&quot;Set2&quot;) +&#10;             theme(panel_background=element_blank(),&#10;                   legend_position=&quot;right&quot;,&#10;                   figure_size=(7, 7),&#10;                   dpi=100))&#10;&#10;print(base_plot)&#10;&#10;```&#10;```&#10;&amp;lt;Figure size 700x293.561 with 1 Axes&amp;gt;&#10;```&#10;" />
      <outline text="点状&#10;" _note="base_plot = (ggplot(df_grid, aes(x='y', y='x', fill='category')) +&#10;             # geom_tile(color = &quot;white&quot;, size = 0.25) +&#10;             geom_point(color=&quot;black&quot;, shape='o', size=7) +&#10;             coord_fixed(ratio=1) +&#10;             xlab(&quot;1 square = 100&quot;) +&#10;             ylab(&quot;&quot;) +&#10;             scale_fill_brewer(type='qual', palette=&quot;Set2&quot;) +&#10;             theme(panel_background=element_blank(),&#10;                   legend_position=&quot;right&quot;,&#10;                   figure_size=(7, 7),&#10;                   dpi=100))&#10;&#10;print(base_plot)&#10;&#10;```&#10;```&#10;&amp;lt;Figure size 700x275.692 with 1 Axes&amp;gt;&#10;```&#10;&#10;" />
      </outline>
    </outline>
  </outline>
  </body>
</opml>