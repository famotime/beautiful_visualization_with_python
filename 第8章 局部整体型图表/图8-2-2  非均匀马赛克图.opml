<?xml version='1.0'?>
<opml version='2.0'>
  <head>
    <ownerEmail>
      quincy.zou@gmail.com
    </ownerEmail>
  </head>
  <body>
  <outline text="图8-2-2  非均匀马赛克图&#10;" _note="import pandas as pd&#10;import numpy as np&#10;from plotnine import *&#10;from plotnine.data import *&#10;import matplotlib.pyplot as plt&#10;&#10;&#10;df = pd.DataFrame(dict(segment=[&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;],&#10;                       Alpha=[2400	, 1200,	600	, 250],&#10;                       Beta=[1000	, 900,	600,	250],&#10;                       Gamma=[400,	600	, 400,	250],&#10;                       Delta=[200,	300	, 400,	250]))&#10;df = df.set_index('segment')&#10;melt_df = pd.melt(df.reset_index(), id_vars=[&#10;                  &quot;segment&quot;], var_name='variable', value_name='value')&#10;&#10;df_rowsum = df.apply(lambda x: x.sum(), axis=1)&#10;&#10;for i in df_rowsum.index:&#10;    for j in df.columns:&#10;        df.loc[i, j] = df.loc[i, j]/df_rowsum[i]*100&#10;&#10;df_rowsum = df_rowsum/np.sum(df_rowsum)*100&#10;df['xmax'] = np.cumsum(df_rowsum)&#10;df['xmin'] = df['xmax'] - df_rowsum&#10;&#10;dfm = pd.melt(df.reset_index(), id_vars=[&#10;              &quot;segment&quot;, &quot;xmin&quot;, &quot;xmax&quot;], value_name=&quot;percentage&quot;)&#10;&#10;dfm['ymax'] = dfm.groupby('segment')['percentage'].transform(&#10;    lambda x: np.cumsum(x))&#10;dfm['ymin'] = dfm.apply(lambda x: x['ymax']-x['percentage'], axis=1)&#10;&#10;dfm['xtext'] = dfm['xmin'] + (dfm['xmax'] - dfm['xmin'])/2&#10;dfm['ytext'] = dfm['ymin'] + (dfm['ymax'] - dfm['ymin'])/2&#10;&#10;# join()函数，连接两个表格data.frame&#10;dfm = pd.merge(left=melt_df, right=dfm, how=&quot;left&quot;, on=[&quot;segment&quot;, &quot;variable&quot;])&#10;&#10;df_label = pd.DataFrame(dict(x=np.repeat(102, 4), y=np.arange(&#10;    12.5, 100, 25), label=[&quot;Alpha&quot;, &quot;Beta&quot;, &quot;Gamma&quot;, &quot;Delta&quot;]))&#10;&#10;display(df, melt_df, df_rowsum, dfm)&#10;&#10;```&#10;```&#10;         Alpha  Beta  Gamma  Delta   xmax  xmin&#10;segment                                        &#10;A         60.0  25.0   10.0    5.0   40.0   0.0&#10;B         40.0  30.0   20.0   10.0   70.0  40.0&#10;C         30.0  30.0   20.0   20.0   90.0  70.0&#10;D         25.0  25.0   25.0   25.0  100.0  90.0&#10;```&#10;&#10;```python&#10;base_plot = (ggplot() +&#10;             geom_rect(aes(ymin='ymin', ymax='ymax', xmin='xmin', xmax='xmax', fill='variable'),&#10;                       dfm, colour=&quot;black&quot;) +&#10;             geom_text(aes(x='xtext', y='ytext',  label='value'), dfm, size=10) +&#10;             geom_text(aes(x='xtext', y=103, label='segment'), dfm, size=13) +&#10;             geom_text(aes(x='x', y='y', label='label'), df_label, size=10, ha='left') +&#10;             scale_x_continuous(breaks=np.arange(0, 101, 25), limits=(0, 110)) +&#10;             scale_fill_hue(s=0.90, l=0.65, h=0.0417, color_space='husl') +&#10;             theme(panel_background=element_blank(),&#10;                   panel_grid_major=element_line(&#10;                       colour=&quot;grey&quot;, size=.25, linetype=&quot;dotted&quot;),&#10;                   panel_grid_minor=element_line(&#10;                       colour=&quot;grey&quot;, size=.25, linetype=&quot;dotted&quot;),&#10;                   text=element_text(size=10),&#10;                   legend_position=&quot;none&quot;,&#10;                   aspect_ratio=1.,&#10;                   figure_size=(5, 5),&#10;                   dpi=100&#10;                   ))&#10;&#10;print(base_plot)&#10;&#10;```&#10;```&#10;&amp;lt;Figure size 500x503.247 with 1 Axes&amp;gt;&#10;```&#10;&#10;" />
  </outline>
  </body>
</opml>