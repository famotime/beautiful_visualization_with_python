<?xml version='1.0'?>
<opml version='2.0'>
  <head>
    <ownerEmail>
      quincy.zou@gmail.com
    </ownerEmail>
  </head>
  <body>
  <outline text="图8-3-6 块状多数据系列柱形图&#10;" _note="import pandas as pd&#10;import numpy as np&#10;from plotnine import *&#10;from plotnine.data import *&#10;import matplotlib.pyplot as plt&#10;&#10;&#10;categ_table = pd.DataFrame(dict(names=['Peter', 'Jack', 'Eelin', 'John'],&#10;                                vals1=[259, 83, 123, 162],&#10;                                vals2=[159, 83, 23, 122],&#10;                                vals3=[85, 48, 83, 67]))&#10;categ_table = categ_table.set_index('names')&#10;categ_table = categ_table.sort_values(by='vals1', ascending=False)&#10;&#10;N = len(categ_table)&#10;ndeep = 5&#10;Width = 2&#10;mydata = pd.DataFrame(columns=[&quot;x&quot;, &quot;y&quot;, &quot;type&quot;])&#10;j = 0&#10;for i in range(0, categ_table.shape[0]):&#10;    for j in range(0, categ_table.shape[1]):&#10;        x = categ_table.iloc[i, j]&#10;        a = np.arange(1, ndeep+1, 1)&#10;        b = np.arange(1, np.ceil(x/ndeep)+1, 1)&#10;        X, Y = np.meshgrid(a, b)&#10;        df_grid = pd.DataFrame({'x': X.flatten(), 'y': Y.flatten()})&#10;&#10;        category = np.repeat(categ_table.columns[j], x)&#10;&#10;        df_grid = df_grid.loc[np.arange(0, len(category)), :]&#10;        df_grid['x'] = df_grid['x']+i*Width+(j+i*3)*ndeep&#10;&#10;        df_grid['type'] = category&#10;        mydata = mydata.append(df_grid)&#10;&#10;&#10;mydata['type'] = pd.Categorical(mydata['type'], categories=categ_table.columns, ordered=True)&#10;mydata['x'] = mydata['x'].astype(float)&#10;x_breaks = (np.arange(0, N)*3+2)*ndeep+np.arange(0, N)*Width-ndeep/2&#10;x_label = categ_table.index&#10;&#10;# mydata_label=pd.DataFrame(dict(y=np.ceil(df_rowsum) / ndeep+2,x=x_breaks,label=df_rowsum))&#10;breaks = np.arange(0, 65, 10)&#10;&#10;mydata&#10;&#10;```&#10;```&#10;       x     y   type&#10;0    1.0   1.0  vals1&#10;1    2.0   1.0  vals1&#10;2    3.0   1.0  vals1&#10;3    4.0   1.0  vals1&#10;4    5.0   1.0  vals1&#10;..   ...   ...    ...&#10;43  65.0   9.0  vals3&#10;44  66.0   9.0  vals3&#10;45  62.0  10.0  vals3&#10;46  63.0  10.0  vals3&#10;47  64.0  10.0  vals3&#10;&#10;[1297 rows x 3 columns]&#10;```&#10;&#10;```python&#10;base_plot = (ggplot() +&#10;             # The color of the lines between tiles&#10;             geom_tile(aes(x='x', y='y', fill='type'), mydata, color=&quot;k&quot;, size=0.2) +&#10;             # geom_text(aes(x='x',y='y',label='label'),data=mydata_label,size=13) + # The color of the lines between tiles&#10;             scale_fill_brewer(type='qual', palette=&quot;Set1&quot;) +&#10;             xlab(&quot;Name&quot;) +&#10;             ylab(&quot;Count: 1 row square =&quot; + str(ndeep)) +&#10;             coord_fixed(ratio=1) +&#10;             scale_x_continuous(breaks=x_breaks, labels=x_label) +&#10;             scale_y_continuous(breaks=breaks, labels=breaks*ndeep, limits=(0, 65), expand=(0, 0)) +&#10;             theme_light() +&#10;             theme(  # panel.border = element_rect(fill=NA,size = 2),&#10;    axis_title=element_text(size=15, face=&quot;plain&quot;, color=&quot;black&quot;),&#10;    axis_text=element_text(size=13, face=&quot;plain&quot;, color=&quot;black&quot;),&#10;    legend_background=element_blank(),&#10;    legend_position='right',&#10;    # aspect_ratio =1,&#10;    figure_size=(7, 7),&#10;    dpi=100&#10;)&#10;)&#10;print(base_plot)&#10;&#10;```&#10;```&#10;&amp;lt;Figure size 700x630.791 with 1 Axes&amp;gt;&#10;```&#10;&#10;" />
  </outline>
  </body>
</opml>