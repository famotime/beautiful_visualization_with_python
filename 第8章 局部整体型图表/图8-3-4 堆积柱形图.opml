<?xml version='1.0'?>
<opml version='2.0'>
  <head>
    <ownerEmail>
      quincy.zou@gmail.com
    </ownerEmail>
  </head>
  <body>
  <outline text="图8-3-4 堆积柱形图&#10;" _note="import pandas as pd&#10;import numpy as np&#10;from plotnine import *&#10;from plotnine.data import *&#10;import matplotlib.pyplot as plt&#10;&#10;&#10;categ_table = pd.DataFrame(dict(names=['Peter', 'Jack', 'Eelin', 'John'],&#10;                                vals1=[259, 83, 123, 162],&#10;                                vals2=[159, 183, 23, 262],&#10;                                vals3=[85, 48, 83, 67]))&#10;categ_table = categ_table.set_index('names')&#10;df_rowsum = categ_table.apply(&#10;    lambda x: x.sum(), axis=1).sort_values(ascending=False)&#10;&#10;N = len(df_rowsum)&#10;ndeep = 10&#10;Width = 2&#10;mydata = pd.DataFrame(columns=[&quot;x&quot;, &quot;y&quot;, &quot;type&quot;])&#10;j = 0&#10;for i in df_rowsum.index:&#10;    print(i)&#10;    x = df_rowsum[i]&#10;    a = np.arange(1, ndeep+1, 1)&#10;    b = np.arange(1, np.ceil(x/ndeep)+1, 1)&#10;    X, Y = np.meshgrid(a, b)&#10;    df_grid = pd.DataFrame({'x': X.flatten(), 'y': Y.flatten()})&#10;&#10;    category = np.repeat(categ_table.columns, categ_table.loc[i, :])&#10;&#10;    df_grid = df_grid.loc[np.arange(0, len(category)), :]&#10;    df_grid['x'] = df_grid['x']+j*ndeep+j*Width&#10;    j = j+1&#10;    df_grid['type'] = category&#10;    mydata = mydata.append(df_grid)&#10;&#10;mydata['type'] = pd.Categorical(mydata['type'], categories=categ_table.columns, ordered=True)&#10;mydata['x'] = mydata['x'].astype(float)&#10;x_breaks = (np.arange(0, N)+1)*ndeep+np.arange(0, N)*Width-ndeep/2&#10;x_label = df_rowsum.index&#10;&#10;mydata_label = pd.DataFrame(&#10;    dict(y=np.ceil(df_rowsum) / ndeep+2, x=x_breaks, label=df_rowsum))&#10;breaks = np.arange(0, 55, 10)&#10;&#10;mydata&#10;&#10;```&#10;```&#10;Peter&#10;John&#10;Jack&#10;Eelin&#10;&#10;```&#10;&#10;```python&#10;base_plot = (ggplot() +&#10;             geom_tile(aes(x='x', y='y', fill='type'), mydata, color=&quot;k&quot;, size=0.25) +&#10;             geom_text(aes(x='x', y='y', label='label'), data=mydata_label, size=13) +&#10;             scale_fill_brewer(type='qual', palette=&quot;Set1&quot;) +&#10;             xlab(&quot;Name&quot;) +&#10;             ylab(&quot;Count: 1 row square =&quot; + str(ndeep)) +&#10;             coord_fixed(ratio=1) +&#10;             scale_x_continuous(breaks=x_breaks, labels=x_label) +&#10;             scale_y_continuous(breaks=breaks, labels=breaks*ndeep, limits=(0, 55), expand=(0, 0)) +&#10;             theme_light() +&#10;             theme(axis_title=element_text(size=15, face=&quot;plain&quot;, color=&quot;black&quot;),&#10;                   axis_text=element_text(&#10;                       size=13, face=&quot;plain&quot;, color=&quot;black&quot;),&#10;                   legend_text=element_text(&#10;                       size=13, face=&quot;plain&quot;, color=&quot;black&quot;),&#10;                   legend_title=element_text(&#10;                       size=15, face=&quot;plain&quot;, color=&quot;black&quot;),&#10;                   legend_background=element_blank(),&#10;                   legend_position=(0.8, 0.8),&#10;                   figure_size=(7, 7),&#10;                   dpi=90))&#10;print(base_plot)&#10;&#10;```&#10;```&#10;&amp;lt;Figure size 630x689.229 with 1 Axes&amp;gt;&#10;```&#10;&#10;```python&#10;base_plot = (ggplot() +&#10;             # The color of the lines between tiles&#10;             geom_point(aes(x='x', y='y', fill='type'), mydata, shape='o', color=&quot;k&quot;, size=4, stroke=0.1) +&#10;             # The color of the lines between tiles&#10;             geom_text(aes(x='x', y='y', label='label'), data=mydata_label, size=13) +&#10;             scale_fill_brewer(type='qual', palette=&quot;Set1&quot;) +&#10;             xlab(&quot;Name&quot;) +&#10;             ylab(&quot;Count: 1 row square =&quot; + str(ndeep)) +&#10;             coord_fixed(ratio=1) +&#10;             scale_x_continuous(breaks=x_breaks, labels=x_label) +&#10;             scale_y_continuous(breaks=breaks, labels=breaks*ndeep, limits=(0, 55), expand=(0, 0)) +&#10;             theme_light() +&#10;             theme(  # panel.border = element_rect(fill=NA,size = 2),&#10;    axis_title=element_text(size=15, face=&quot;plain&quot;, color=&quot;black&quot;),&#10;    axis_text=element_text(size=13, face=&quot;plain&quot;, color=&quot;black&quot;),&#10;    legend_background=element_blank(),&#10;    legend_position=(0.8, 0.7),&#10;    # aspect_ratio =1,&#10;    figure_size=(7, 7),&#10;    dpi=100&#10;)&#10;)&#10;print(base_plot)&#10;&#10;```&#10;```&#10;&amp;lt;Figure size 700x782.828 with 1 Axes&amp;gt;&#10;```&#10;&#10;" />
  </outline>
  </body>
</opml>