<?xml version='1.0'?>
<opml version='2.0'>
  <head>
    <ownerEmail>
      quincy.zou@gmail.com
    </ownerEmail>
  </head>
  <body>
  <outline text="图6-3-3 (b)二维核密度估曲面图&#10;" _note="import pandas as pd&#10;import numpy as np&#10;import matplotlib.pyplot as plt&#10;from mpl_toolkits import mplot3d&#10;import seaborn as sns&#10;from plotnine import *&#10;import scipy.stats as st&#10;from sklearn.datasets.samples_generator import make_blobs&#10;&#10;&#10;N = 5000&#10;x1 = np.random.normal(1.5, 1, N)&#10;y1 = np.random.normal(1.6, 1, N)&#10;x2 = np.random.normal(2.5, 1, N)&#10;y2 = np.random.normal(2.2, 1, N)&#10;&#10;df = pd.DataFrame({'x': np.append(x1, x2), 'y': np.append(y1, y2)})&#10;df&#10;&#10;```&#10;```&#10;C:\QMDownload\anaconda\lib\site-packages\sklearn\utils\deprecation.py:143: FutureWarning: The sklearn.datasets.samples_generator module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.datasets. Anything that cannot be imported from sklearn.datasets is now part of the private API.&#10;&#10;```&#10;&#10;```python&#10;# Extract x and y&#10;x = df.x.values&#10;y = df.y.values&#10;# Define the borders&#10;deltaX = (max(x) - min(x))/10&#10;deltaY = (max(y) - min(y))/10&#10;xmin = min(x) - deltaX&#10;xmax = max(x) + deltaX&#10;ymin = min(y) - deltaY&#10;ymax = max(y) + deltaY&#10;print(xmin, xmax, ymin, ymax)&#10;# Create meshgrid&#10;X, Y = np.mgrid[xmin:xmax:100j, ymin:ymax:100j]&#10;&#10;&#10;positions = np.vstack([X.ravel(), Y.ravel()])&#10;values = np.vstack([x, y])&#10;kernel = st.gaussian_kde(values)&#10;Z = np.reshape(kernel(positions), X.shape)&#10;&#10;&#10;fig = plt.figure(figsize=(9, 7), dpi=90)&#10;# ax = fig.add_subplot(111, projection='3d')&#10;ax = fig.gca(projection='3d')&#10;ax.view_init(azim=30, elev=20)  # 改变绘制图像的视角,即相机的位置,azim沿着z轴旋转，elev沿着y轴&#10;ax.grid(False)&#10;ax.xaxis._axinfo['tick']['outward_factor'] = 0&#10;ax.xaxis._axinfo['tick']['inward_factor'] = 0.4&#10;ax.yaxis._axinfo['tick']['outward_factor'] = 0&#10;ax.yaxis._axinfo['tick']['inward_factor'] = 0.4&#10;ax.zaxis._axinfo['tick']['outward_factor'] = 0&#10;ax.zaxis._axinfo['tick']['inward_factor'] = 0.4&#10;ax.xaxis.pane.fill = False&#10;ax.yaxis.pane.fill = False&#10;ax.zaxis.pane.fill = False&#10;ax.xaxis.pane.set_edgecolor('k')&#10;ax.yaxis.pane.set_edgecolor('k')&#10;ax.zaxis.pane.set_edgecolor('k')&#10;p = ax.plot_surface(X, Y, Z, rstride=1, cstride=1,&#10;                    cmap='Spectral_r', alpha=1, edgecolor='k', linewidth=0.1)&#10;ax.set_xlabel(&quot;x axis&quot;)&#10;ax.set_ylabel(&quot;y axis&quot;)&#10;ax.set_zlabel(&quot;density&quot;)&#10;# ax.set_zlim(50,170)&#10;cbar = fig.colorbar(p, shrink=0.5, aspect=10)&#10;cbar.set_label('density')&#10;# fig.savefig('三维核密度估计曲面图2.pdf')&#10;&#10;```&#10;```&#10;-3.151065061831064 6.805634847875446 -2.9864423346211457 6.747940265962715&#10;&#10;```&#10;&#10;" />
  </outline>
  </body>
</opml>