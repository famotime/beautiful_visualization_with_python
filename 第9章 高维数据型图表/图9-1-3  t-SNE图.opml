<?xml version='1.0'?>
<opml version='2.0'>
  <head>
    <ownerEmail>
      quincy.zou@gmail.com
    </ownerEmail>
  </head>
  <body>
  <outline text="图9-1-3  t-SNE图&#10;">
    <outline text="(a) 四维数据的iris数据集&#10;" _note="import pandas as pd&#10;import numpy as np&#10;from plotnine import *&#10;from sklearn import manifold, datasets&#10;&#10;&#10;iris = datasets.load_iris()&#10;&#10;tsne = manifold.TSNE(n_components=2, init='pca', random_state=501)&#10;X_tsne = tsne.fit_transform(iris.data)&#10;target = pd.Categorical.from_codes(iris.target, iris.target_names)&#10;df = pd.DataFrame(&#10;    dict(DistributedY1=X_tsne[:, 0], DistributedY2=X_tsne[:, 1], target=target))&#10;&#10;df&#10;&#10;```&#10;```&#10;     DistributedY1  DistributedY2     target&#10;0       -25.117199       9.059608     setosa&#10;1       -22.541553       8.045611     setosa&#10;2       -22.436010       9.263760     setosa&#10;3       -22.081423       8.979576     setosa&#10;4       -25.107370       9.551804     setosa&#10;..             ...            ...        ...&#10;145       7.062612      -7.190415  virginica&#10;146       8.492211      -4.248770  virginica&#10;147       7.497847      -6.372992  virginica&#10;148       7.133761      -8.166843  virginica&#10;149       8.778635      -3.054922  virginica&#10;&#10;[150 rows x 3 columns]&#10;```&#10;&#10;```python&#10;base_plot2 = (ggplot(df, aes('DistributedY1', 'DistributedY2', fill='target')) +&#10;              geom_point(alpha=1, size=3, shape='o', colour='k') +&#10;              # 绘制透明度为0.2 的散点图&#10;              # stat_ellipse( geom=&quot;polygon&quot;, level=0.95, alpha=0.2) +&#10;              # 绘制椭圆标定不同类别，如果省略该语句，则绘制图3-1-7(c)&#10;              # scale_color_manual(values=(&quot;# 00AFBB&quot;,&quot;# FC4E07&quot;)) +# 使用不同颜色标定不同数据类别&#10;              # 使用不同颜色标定不同椭类别&#10;              scale_fill_manual(values=(&quot;# 00AFBB&quot;, &quot;# E7B800&quot;, &quot;# FC4E07&quot;), name='group') +&#10;              theme(&#10;    # text=element_text(size=15,face=&quot;plain&quot;,color=&quot;black&quot;),&#10;    axis_title=element_text(size=13, face=&quot;plain&quot;, color=&quot;black&quot;),&#10;    axis_text=element_text(size=12, face=&quot;plain&quot;, color=&quot;black&quot;),&#10;    legend_text=element_text(size=11, face=&quot;plain&quot;, color=&quot;black&quot;),&#10;    legend_background=element_blank(),&#10;    legend_position=(0.3, 0.25),&#10;    aspect_ratio=1,&#10;    figure_size=(5, 5),&#10;    dpi=100&#10;)&#10;)&#10;print(base_plot2)&#10;&#10;```&#10;```&#10;&amp;lt;Figure size 500x503.247 with 1 Axes&amp;gt;&#10;```&#10;" />
    <outline text="(b) 93维数据的train数据集&#10;" _note="df = pd.read_csv('Tsne_Data.csv')&#10;df = df.set_index('id')&#10;&#10;num_rows_sample = 5000&#10;&#10;df = df.sample(n=num_rows_sample)&#10;&#10;tsne = manifold.TSNE(n_components=2, init='pca', random_state=501)&#10;X_tsne = tsne.fit_transform(df.iloc[:, :-1])&#10;&#10;df = pd.DataFrame(dict(&#10;    DistributedY1=X_tsne[:, 0], DistributedY2=X_tsne[:, 1], target=df.iloc[:, -1]))&#10;df&#10;&#10;```&#10;```&#10;       DistributedY1  DistributedY2   target&#10;id                                          &#10;11871     -28.675140      27.469158  Class_2&#10;52579      39.476353       6.181512  Class_8&#10;781        22.675184       4.028324  Class_1&#10;18369     -66.451782      18.294338  Class_3&#10;3369      -52.645214      28.745630  Class_2&#10;...              ...            ...      ...&#10;46877      34.707230      -3.870767  Class_7&#10;31940      -2.944126     -68.460983  Class_6&#10;17952     -48.964989     -47.494438  Class_2&#10;26881     -34.480595      29.437849  Class_4&#10;29109       3.244773      74.431396  Class_5&#10;&#10;[5000 rows x 3 columns]&#10;```&#10;&#10;```python&#10;base_plot2 = (ggplot(df, aes('DistributedY1', 'DistributedY2', fill='target')) +&#10;              geom_point(alpha=1, size=2, shape='o', colour='k', stroke=0.1) +&#10;              # 绘制透明度为0.2 的散点图&#10;              # stat_ellipse( geom=&quot;polygon&quot;, level=0.95, alpha=0.2) +&#10;              # 绘制椭圆标定不同类别，如果省略该语句，则绘制图3-1-7(c)&#10;              # scale_color_manual(values=(&quot;# 00AFBB&quot;,&quot;# FC4E07&quot;)) +# 使用不同颜色标定不同数据类别&#10;              # scale_fill_cmap(name ='Set1')+&#10;              scale_fill_hue(s=0.99, l=0.65, h=0.0417, color_space='husl') +&#10;              xlim(-100, 100) +&#10;              theme(&#10;    # text=element_text(size=15,face=&quot;plain&quot;,color=&quot;black&quot;),&#10;    axis_title=element_text(size=13, face=&quot;plain&quot;, color=&quot;black&quot;),&#10;    axis_text=element_text(size=12, face=&quot;plain&quot;, color=&quot;black&quot;),&#10;    legend_text=element_text(size=11, face=&quot;plain&quot;, color=&quot;black&quot;),&#10;    aspect_ratio=1,&#10;    figure_size=(5, 5),&#10;    dpi=100&#10;)&#10;)&#10;print(base_plot2)&#10;&#10;```&#10;```&#10;&amp;lt;Figure size 500x503.247 with 1 Axes&amp;gt;&#10;```&#10;&#10;" />
    </outline>
  </outline>
  </body>
</opml>