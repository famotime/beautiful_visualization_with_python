<?xml version='1.0'?>
<opml version='2.0'>
  <head>
    <ownerEmail>
      quincy.zou@gmail.com
    </ownerEmail>
  </head>
  <body>
  <outline text="图4-2-1 条形图系列&#10;" _note="import pandas as pd&#10;import numpy as np&#10;from plotnine import *&#10;# from plotnine.data import *&#10;import matplotlib.pyplot as plt&#10;&#10;```&#10;">
    <outline text="(a) 单数剧系列条形图&#10;" _note="df = pd.read_csv('Stackedbar_Data.csv')&#10;&#10;df = df.sort_values(by='Pensions', ascending=True)&#10;&#10;df['Country'] = pd.Categorical(df['Country'], categories=df['Country'], ordered=True)&#10;df&#10;&#10;```&#10;```&#10;         Country  Pensions  Income  Health   Other services&#10;5        Britain         6       6        8               4&#10;7  United States         7       3        8               1&#10;1         Sweden         8       6        7               8&#10;6   OECD_average         8       5        6               3&#10;4          Spain         9       7        7               2&#10;3        Germany        11       5        8               3&#10;0         France        14       5        9               3&#10;2          Italy        15       4        7               1&#10;```&#10;&#10;```python&#10;base_plot = (ggplot(df, aes('Country', 'Pensions')) +&#10;             # &quot;# 00AFBB&quot;&#10;             geom_bar(stat=&quot;identity&quot;, color=&quot;black&quot;, width=0.6, fill=&quot;# FC4E07&quot;, size=0.25) +&#10;             # scale_fill_manual(values=brewer.pal(9,&quot;YlOrRd&quot;)[c(6:2)])+&#10;             coord_flip() +&#10;             theme(&#10;    axis_title=element_text(size=15, face=&quot;plain&quot;, color=&quot;black&quot;),&#10;    axis_text=element_text(size=12, face=&quot;plain&quot;, color=&quot;black&quot;),&#10;    legend_title=element_text(size=13, face=&quot;plain&quot;, color=&quot;black&quot;),&#10;    legend_position=&quot;right&quot;,&#10;    aspect_ratio=1.15,&#10;    figure_size=(6.5, 6.5),&#10;    dpi=50&#10;))&#10;&#10;print(base_plot)&#10;&#10;```&#10;```&#10;&amp;lt;Figure size 325x376.177 with 1 Axes&amp;gt;&#10;```&#10;" />
    <outline text="(b)双数剧系列条形图&#10;" _note="df = pd.read_csv('Stackedbar_Data.csv')&#10;&#10;df = df.iloc[:, [0, 2, 1]]&#10;df = df.sort_values(by='Pensions', ascending=True)&#10;mydata = pd.melt(df, id_vars='Country')&#10;&#10;mydata['Country'] = pd.Categorical(mydata['Country'], categories=df['Country'], ordered=True)&#10;&#10;&#10;base_plot = (ggplot(mydata, aes('Country', 'value', fill='variable')) +&#10;             geom_bar(stat=&quot;identity&quot;, color=&quot;black&quot;, position=position_dodge(), width=0.7, size=0.25) +&#10;             scale_fill_manual(values=(&quot;# 00AFBB&quot;, &quot;# FC4E07&quot;, &quot;# E7B800&quot;)) +&#10;             coord_flip() +&#10;             theme(&#10;    axis_title=element_text(size=15, face=&quot;plain&quot;, color=&quot;black&quot;),&#10;    axis_text=element_text(size=12, face=&quot;plain&quot;, color=&quot;black&quot;),&#10;    legend_title=element_text(size=14, face=&quot;plain&quot;, color=&quot;black&quot;),&#10;    legend_background=element_blank(),&#10;    legend_position=(0.8, 0.2),&#10;    aspect_ratio=1.15,&#10;    figure_size=(6.5, 6.5),&#10;    dpi=50&#10;))&#10;print(base_plot)&#10;&#10;```&#10;```&#10;&amp;lt;Figure size 325x376.177 with 1 Axes&amp;gt;&#10;```&#10;" />
    <outline text="(c)堆积条形图&#10;" _note="df = pd.read_csv('Stackedbar_Data.csv')&#10;Sum_df = df.iloc[:, 1:].apply(&#10;    lambda x: x.sum(), axis=0).sort_values(ascending=True)&#10;meanRow_df = df.iloc[:, 1:].apply(lambda x: x.mean(), axis=1)&#10;Sing_df = df['Country'][meanRow_df.sort_values(ascending=True).index]&#10;mydata = pd.melt(df, id_vars='Country')&#10;mydata['variable'] = pd.Categorical(mydata['variable'], categories=Sum_df.index, ordered=True)&#10;mydata['Country'] = pd.Categorical(mydata['Country'], categories=Sing_df, ordered=True)&#10;&#10;&#10;base_plot = (ggplot(mydata, aes('Country', 'value', fill='variable')) +&#10;             geom_bar(stat=&quot;identity&quot;, color=&quot;black&quot;, position='stack', width=0.65, size=0.25) +&#10;             scale_fill_brewer(palette=&quot;YlOrRd&quot;) +&#10;             coord_flip() +&#10;             theme(&#10;    axis_title=element_text(size=18, face=&quot;plain&quot;, color=&quot;black&quot;),&#10;    axis_text=element_text(size=16, face=&quot;plain&quot;, color=&quot;black&quot;),&#10;    legend_title=element_text(size=18, face=&quot;plain&quot;, color=&quot;black&quot;),&#10;    legend_text=element_text(size=16, face=&quot;plain&quot;, color=&quot;black&quot;),&#10;    legend_background=element_blank(),&#10;    legend_position='right',&#10;    aspect_ratio=1.15,&#10;    figure_size=(6.5, 6.5),&#10;    dpi=50&#10;))&#10;print(base_plot)&#10;# base_plot.save('堆积条形图.pdf')&#10;&#10;```&#10;```&#10;&amp;lt;Figure size 325x376.177 with 1 Axes&amp;gt;&#10;```&#10;" />
    <outline text="(d) 百分比堆积柱形图&#10;" _note="df = pd.read_csv('Stackedbar_Data.csv')&#10;SumCol_df = df.iloc[:, 1:].apply(lambda x: x.sum(), axis=1)&#10;df.iloc[:, 1:] = df.iloc[:, 1:].apply(lambda x: x/SumCol_df, axis=0)&#10;&#10;meanRow_df = df.iloc[:, 1:].apply(&#10;    lambda x: x.mean(), axis=0).sort_values(ascending=True)&#10;Per_df = df.loc[:, meanRow_df.idxmax()].sort_values(ascending=True)&#10;Sing_df = df['Country'][Per_df.index]&#10;&#10;mydata = pd.melt(df, id_vars='Country')&#10;mydata['Country'] = pd.Categorical(mydata['Country'], categories=Sing_df, ordered=True)&#10;mydata['variable'] = pd.Categorical(mydata['variable'], categories=meanRow_df.index, ordered=True)&#10;&#10;&#10;base_plot = (ggplot(mydata, aes(x='Country', y='value', fill='variable'))&#10;             + geom_bar(stat=&quot;identity&quot;, color=&quot;black&quot;,&#10;                        position='fill', width=0.7, size=0.25)&#10;             + scale_fill_brewer(palette=&quot;GnBu&quot;)&#10;             + coord_flip()&#10;             + theme(&#10;    # text=element_text(size=15,face=&quot;plain&quot;,color=&quot;black&quot;),&#10;    axis_title=element_text(size=18, face=&quot;plain&quot;, color=&quot;black&quot;),&#10;    axis_text=element_text(size=16, face=&quot;plain&quot;, color=&quot;black&quot;),&#10;    legend_title=element_text(size=18, face=&quot;plain&quot;, color=&quot;black&quot;),&#10;    legend_text=element_text(size=16, face=&quot;plain&quot;, color=&quot;black&quot;),&#10;    aspect_ratio=1.15,&#10;    figure_size=(6.5, 6.5),&#10;    dpi=50&#10;)&#10;)&#10;print(base_plot)&#10;# base_plot.save('百分比堆积柱形图.pdf')&#10;&#10;```&#10;```&#10;&amp;lt;Figure size 325x376.177 with 1 Axes&amp;gt;&#10;```&#10;&#10;" />
    </outline>
  </outline>
  </body>
</opml>