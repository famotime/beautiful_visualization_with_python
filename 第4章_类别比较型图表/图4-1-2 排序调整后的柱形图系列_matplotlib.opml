<?xml version='1.0'?>
<opml version='2.0'>
  <head>
    <ownerEmail>
      quincy.zou@gmail.com
    </ownerEmail>
  </head>
  <body>
  <outline text="图4-1-2 排序调整后的柱形图系列_matplotlib&#10;" _note="from matplotlib import cm, colors&#10;from matplotlib import pyplot as plt&#10;from matplotlib.pyplot import figure, show, rc&#10;import numpy as np&#10;import pandas as pd&#10;# %matplotlib inline&#10;plt.rcParams[&quot;font.sans-serif&quot;] = 'SimHei'  # 解决中文乱码问题&#10;plt.rcParams['axes.unicode_minus'] = False  # 解决负号无法显示的问题&#10;plt.rc('axes', axisbelow=True)&#10;&#10;```&#10;">
    <outline text="(a) 单数剧系列柱形图&#10;" _note="mydata = pd.DataFrame({'Cut': [&quot;Fair&quot;, &quot;Good&quot;, &quot;Very Good&quot;, &quot;Premium&quot;, &quot;Ideal&quot;],&#10;                       'Price': [4300, 3800, 3950, 4700, 3500]})&#10;&#10;Sort_data = mydata.sort_values(by='Price', ascending=False)&#10;&#10;fig = plt.figure(figsize=(6, 7), dpi=70)&#10;plt.subplots_adjust(left=0.1, right=0.9, top=0.9, bottom=0.1)&#10;plt.grid(axis=&quot;y&quot;, c=(217/256, 217/256, 217/256))  # 设置网格线&#10;# 将网格线置于底层&#10;ax = plt.gca()  # 获取边框&#10;ax.spines['top'].set_color('none')  # 设置上‘脊梁’为红色&#10;ax.spines['right'].set_color('none')  # 设置上‘脊梁’为无色&#10;ax.spines['left'].set_color('none')  # 设置上‘脊梁’为无色&#10;&#10;plt.bar(Sort_data['Cut'], Sort_data['Price'],&#10;        width=0.6, align=&quot;center&quot;, label=&quot;Cut&quot;)&#10;&#10;plt.ylim(0, 6000)  # 设定x轴范围&#10;plt.xlabel('Cut')&#10;plt.ylabel('Price');&#10;&#10;```&#10;```&#10;Text(0, 0.5, 'Price')&#10;```&#10;" />
    <outline text="b)双数剧系列柱形图&#10;" _note="df = pd.read_csv('MultiColumn_Data.csv')&#10;df = df.sort_values(by='1996', ascending=False)&#10;df&#10;&#10;```&#10;```&#10;           Catergory  1996  1997&#10;0  Temporary\nStream  7.67  5.84&#10;1  Permanent\nStream  4.02  6.45&#10;2               Lake  3.95  6.76&#10;```&#10;&#10;```python&#10;x_label = np.array(df[&quot;Catergory&quot;])&#10;x = np.arange(len(x_label))&#10;y1 = np.array(df[&quot;1996&quot;])&#10;y2 = np.array(df[&quot;1997&quot;])&#10;&#10;fig = plt.figure(figsize=(5, 5))&#10;plt.subplots_adjust(left=0.1, right=0.9, top=0.9, bottom=0.1)  # 设置绘图区域大小位置&#10;&#10;plt.bar(x, y1, width=0.3, color='# 00AFBB', label='1996', edgecolor='k',&#10;        linewidth=0.25)  # 调整y1轴位置，颜色，label为图例名称，与下方legend结合使用&#10;plt.bar(x+0.3, y2, width=0.3, color='# FC4E07', label='1997',&#10;        edgecolor='k', linewidth=0.25)  # 调整y2轴位置，颜色，label为图例名称，与下方legend结合使用&#10;plt.xticks(x+0.15, x_label, size=12)  # 设置x轴刻度，位置,大小&#10;&#10;# 显示图例，loc图例显示位置(可以用坐标方法显示），ncol图例显示几列，默认为1列,frameon设置图形边框&#10;plt.legend(loc=(1, 0.5), ncol=1, frameon=False)&#10;&#10;plt.yticks(size=12)  # 设置y轴刻度，位置,大小&#10;plt.grid(axis=&quot;y&quot;, c=(217/256, 217/256, 217/256))  # 设置网格线&#10;# 将y轴网格线置于底层&#10;# plt.xlabel(&quot;Quarter&quot;,labelpad=10,size=18,)                          # 设置x轴标签,labelpad设置标签距离x轴的位置&#10;# plt.ylabel(&quot;Amount&quot;,labelpad=10,size=18,)                                   # 设置y轴标签,labelpad设置标签距离y轴的位置&#10;&#10;&#10;ax = plt.gca()  &#10;ax.spines['top'].set_color('none')  # 设置上‘脊梁’为无色&#10;ax.spines['right'].set_color('none')  # 设置右‘脊梁’为无色&#10;ax.spines['left'].set_color('none')  # 设置左‘脊梁’为无色&#10;&#10;```&#10;```&#10;&amp;lt;Figure size 360x360 with 1 Axes&amp;gt;&#10;```&#10;" />
    <outline text="c)堆积柱形图&#10;" _note="df = pd.read_csv('StackedColumn_Data.csv')&#10;df = df.set_index(&quot;Clarity&quot;)&#10;df&#10;&#10;```&#10;```&#10;             I1   SI2   SI1   VS2   VS1    S2    S1    IF&#10;Clarity                                                  &#10;Fair        150   400   390   300   130   100   100   150&#10;Good       1200  1100  1700   900   790  1300  1200  1100&#10;Very_Good  1300  2300  3300  1900  1800  1900  1700  1300&#10;Premium    2800  2900  3500  2800  3000  1800  1600  1280&#10;Ideal      2000  2700  4200  3300  4200  2700  2100  1300&#10;```&#10;&#10;```python&#10;Sum_df = df.apply(lambda x: x.sum(), axis=0).sort_values(ascending=False)&#10;df = df.loc[:, Sum_df.index]&#10;&#10;meanRow_df = df.apply(lambda x: x.mean(), axis=1)&#10;Sing_df = meanRow_df.sort_values(ascending=False).index&#10;&#10;n_row, n_col = df.shape&#10;# x_label=np.array(df.columns)&#10;x_value = np.arange(n_col)&#10;&#10;cmap = cm.get_cmap('YlOrRd_r', n_row)&#10;color = [colors.rgb2hex(cmap(i)[:3]) for i in range(cmap.N)]&#10;&#10;bottom_y = np.zeros(n_col)&#10;&#10;fig = plt.figure(figsize=(5, 5))&#10;# plt.subplots_adjust(left=0.1, right=0.9, top=0.7, bottom=0.1)&#10;&#10;for i in range(n_row):&#10;    label = Sing_df[i]&#10;    plt.bar(x_value, df.loc[label, :], bottom=bottom_y, width=0.5,&#10;            color=color[i], label=label, edgecolor='k', linewidth=0.25)&#10;    bottom_y = bottom_y+df.loc[label, :].values&#10;&#10;plt.xticks(x_value, df.columns, size=10)  # 设置x轴刻度&#10;# plt.tick_params(axis=&quot;x&quot;,width=5)&#10;&#10;plt.legend(loc=(1, 0.3), ncol=1, frameon=False)&#10;&#10;plt.grid(axis=&quot;y&quot;, c=(166/256, 166/256, 166/256))&#10;&#10;ax = plt.gca()  # 获取整个表格边框&#10;ax.spines['top'].set_color('none')  # 设置上‘脊梁’为无色&#10;ax.spines['right'].set_color('none')  # 设置右‘脊梁’为无色&#10;ax.spines['left'].set_color('none')  # 设置左‘脊梁’为无色&#10;&#10;```&#10;```&#10;&amp;lt;Figure size 360x360 with 1 Axes&amp;gt;&#10;```&#10;" />
    <outline text="d) 百分比堆积柱形图&#10;" _note="df = pd.read_csv('StackedColumn_Data.csv')&#10;&#10;df = df.set_index(&quot;Clarity&quot;)&#10;&#10;SumCol_df = df.apply(lambda x: x.sum(), axis=0)&#10;&#10;df = df.apply(lambda x: x/SumCol_df, axis=1)&#10;&#10;meanRow_df = df.apply(lambda x: x.mean(), axis=1)&#10;&#10;&#10;Per_df = df.loc[meanRow_df.idxmax(), :].sort_values(ascending=False)&#10;&#10;&#10;Sing_df = meanRow_df.sort_values(ascending=False).index&#10;&#10;&#10;df = df.loc[:, Per_df.index]&#10;&#10;n_row, n_col = df.shape&#10;&#10;x_value = np.arange(n_col)&#10;&#10;cmap = cm.get_cmap('YlOrRd_r', n_row)&#10;color = [colors.rgb2hex(cmap(i)[:3]) for i in range(cmap.N)]&#10;&#10;bottom_y = np.zeros(n_col)&#10;&#10;fig = plt.figure(figsize=(5, 5))&#10;# plt.subplots_adjust(left=0.1, right=0.9, top=0.7, bottom=0.1)&#10;&#10;for i in range(n_row):&#10;    label = Sing_df[i]&#10;    plt.bar(x_value, df.loc[label, :], bottom=bottom_y, width=0.5,&#10;            color=color[i], label=label, edgecolor='k', linewidth=0.25)&#10;    bottom_y = bottom_y+df.loc[label, :].values&#10;&#10;plt.xticks(x_value, df.columns, size=10)  # 设置x轴刻度&#10;plt.gca().set_yticklabels(['{:.0f}%'.format(x*100)&#10;                           for x in plt.gca().get_yticks()])&#10;&#10;plt.legend(loc=(1, 0.3), ncol=1, frameon=False)&#10;&#10;plt.grid(axis=&quot;y&quot;, c=(166/256, 166/256, 166/256))&#10;&#10;ax = plt.gca()  # 获取整个表格边框&#10;ax.spines['top'].set_color('none')  # 设置上‘脊梁’为无色&#10;ax.spines['right'].set_color('none')  # 设置右‘脊梁’为无色&#10;ax.spines['left'].set_color('none')  # 设置左‘脊梁’为无色&#10;&#10;```&#10;```&#10;&amp;lt;Figure size 360x360 with 1 Axes&amp;gt;&#10;```&#10;&#10;" />
    </outline>
  </outline>
  </body>
</opml>