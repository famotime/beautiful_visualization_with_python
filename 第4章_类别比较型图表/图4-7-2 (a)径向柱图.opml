<?xml version='1.0'?>
<opml version='2.0'>
  <head>
    <ownerEmail>
      quincy.zou@gmail.com
    </ownerEmail>
  </head>
  <body>
  <outline text="图4-7-2 (a)径向柱图&#10;" _note="import datetime&#10;import numpy as np&#10;from matplotlib import cm, colors&#10;from matplotlib import pyplot as plt&#10;from matplotlib.pyplot import figure, show, rc&#10;import pandas as pd&#10;plt.rcParams[&quot;patch.force_edgecolor&quot;] = True&#10;# plt.rc('axes',axisbelow=True)&#10;plt.rcParams['axes.axisbelow'] = True&#10;&#10;&#10;def dateRange(beginDate, endDate):&#10;    dates = []&#10;    dt = datetime.datetime.strptime(beginDate, &quot;%Y-%m-%d&quot;)&#10;    date = beginDate[:]&#10;    while date &amp;lt;= endDate:&#10;        dates.append(date)&#10;        dt = dt + datetime.timedelta(1)&#10;        date = dt.strftime(&quot;%Y-%m-%d&quot;)&#10;    return dates&#10;&#10;&#10;mydata = pd.DataFrame(dict(day=dateRange(&quot;2016-01-01&quot;, &quot;2016-02-01&quot;),&#10;                           Price=-np.sort(-np.random.normal(loc=30, scale=10, size=32)) +&#10;                           np.random.normal(loc=3, scale=3, size=32)))&#10;&#10;mydata['day'] = pd.to_datetime(mydata['day'], format=&quot;%Y/%m/%d&quot;)&#10;mydata&#10;&#10;```&#10;```&#10;          day      Price&#10;0  2016-01-01  52.196562&#10;1  2016-01-02  51.344107&#10;2  2016-01-03  48.327018&#10;3  2016-01-04  40.241981&#10;4  2016-01-05  39.048213&#10;5  2016-01-06  39.437251&#10;6  2016-01-07  40.656891&#10;7  2016-01-08  37.915648&#10;8  2016-01-09  44.253001&#10;9  2016-01-10  35.318269&#10;10 2016-01-11  37.606528&#10;11 2016-01-12  29.134546&#10;12 2016-01-13  38.896791&#10;13 2016-01-14  34.442885&#10;14 2016-01-15  31.981429&#10;15 2016-01-16  33.065588&#10;16 2016-01-17  27.939002&#10;17 2016-01-18  31.130570&#10;18 2016-01-19  34.420807&#10;19 2016-01-20  35.705100&#10;20 2016-01-21  34.443550&#10;21 2016-01-22  28.930345&#10;22 2016-01-23  28.003787&#10;23 2016-01-24  21.644982&#10;24 2016-01-25  23.396994&#10;25 2016-01-26  26.981609&#10;26 2016-01-27  18.563862&#10;27 2016-01-28  22.771140&#10;28 2016-01-29  22.018360&#10;29 2016-01-30  13.480495&#10;30 2016-01-31  13.253912&#10;31 2016-02-01  -2.640313&#10;```&#10;&#10;```python&#10;n_row = mydata.shape[0]&#10;angle = np.arange(0, 2*np.pi, 2*np.pi/n_row)&#10;radius = np.array(mydata.Price)&#10;&#10;fig = figure(figsize=(4, 4), dpi=90)&#10;ax = fig.add_axes([0.1, 0.1, 0.8, 0.8], polar=True)&#10;&#10;# 方法用于设置角度偏离,参数值为弧度值数值&#10;ax.set_theta_offset(np.pi/2-np.pi/n_row)&#10;# 当set_theta_direction的参数值为1,'counterclockwise'或者是'anticlockwise'的时候，正方向为逆时针；&#10;# 当set_theta_direction的参数值为-1或者是'clockwise'的时候，正方向为顺时针；&#10;ax.set_theta_direction(-1)&#10;# 方法用于设置极径标签显示位置,参数为标签所要显示在的角度&#10;ax.set_rlabel_position(360-180/n_row)&#10;&#10;cmap = cm.get_cmap('Blues_r', n_row)&#10;color = [colors.rgb2hex(cmap(i)[:3]) for i in range(cmap.N)]&#10;&#10;plt.bar(angle, radius, color=color, alpha=0.9,&#10;        width=0.2, align=&quot;center&quot;, linewidth=0.25)&#10;&#10;plt.ylim(-15, 60)&#10;index = np.arange(0, n_row, 3)&#10;plt.xticks(angle[index], labels=[x.strftime('%m-%d')&#10;                                 for x in mydata.day[index]], size=12)&#10;plt.yticks(np.arange(0, 60, 10), verticalalignment='center',&#10;           horizontalalignment='right')&#10;&#10;&#10;plt.grid(which='major', axis=&quot;x&quot;, linestyle='-',&#10;         linewidth='0.5', color='gray', alpha=0.5)&#10;plt.grid(which='major', axis=&quot;y&quot;, linestyle='-',&#10;         linewidth='0.5', color='gray', alpha=0.5)&#10;&#10;# fig.savefig('径向柱图.pdf')&#10;&#10;```&#10;```&#10;&amp;lt;Figure size 360x360 with 1 Axes&amp;gt;&#10;```&#10;&#10;" />
  </outline>
  </body>
</opml>