<?xml version='1.0'?>
<opml version='2.0'>
  <head>
    <ownerEmail>
      quincy.zou@gmail.com
    </ownerEmail>
  </head>
  <body>
  <outline text="图5-5-3 峰峦图&#10;" _note="import pandas as pd&#10;import numpy as np&#10;from plotnine import *&#10;from scipy import interpolate&#10;&#10;&#10;df = pd.read_csv('Facting_Data.csv')&#10;df_melt = pd.melt(df, id_vars='X_Axis', var_name='var', value_name='value')&#10;df, df_melt&#10;&#10;```&#10;```&#10;(    X_Axis       60       55       50      45      40      35      30      25&#10; 0      360   7.6821   7.3053   6.0619  7.6628  8.3848  9.2971  9.2372  8.6967&#10; 1      370   7.1166   7.0108   6.5378  7.7374  8.4002  9.1590  9.0612  7.8567&#10; 2      380   6.2423   6.3366   6.1613  6.9001  7.4425  8.1681  7.7771  6.9062&#10; 3      390   5.3379   5.5059   5.4587  5.8385  6.2378  6.7344  6.3799  5.7448&#10; 4      400   4.4369   4.5943   4.5685  4.7075  4.9636  5.3273  5.0153  4.4864&#10; 5      410   3.5337   3.6765   3.6402  3.7000  3.8173  4.1257  3.8898  3.4693&#10; 6      420   2.8664   3.0402   3.0192  3.0142  3.0933  3.3515  3.1961  2.8586&#10; 7      430   2.4889   2.7031   2.6770  2.6541  2.7015  2.9365  2.8073  2.5205&#10; 8      440   2.2590   2.4977   2.4587  2.4136  2.4313  2.6138  2.5083  2.2610&#10; 9      450   2.1903   2.4267   2.3690  2.2875  2.2590  2.4194  2.3193  2.0908&#10; 10     460   2.2336   2.4609   2.3726  2.2276  2.1406  2.2789  2.1713  1.9664&#10; 11     470   2.4132   2.6218   2.4909  2.2520  2.0713  2.1753  2.0677  1.8747&#10; 12     480   2.8172   2.9937   2.7968  2.3905  2.0528  2.1075  1.9865  1.8026&#10; 13     490   3.2794   3.4094   3.1387  2.5632  2.0549  2.0669  1.9310  1.7590&#10; 14     500   4.0475   4.1306   3.7575  2.9351  2.1385  2.0811  1.9090  1.7449&#10; 15     510   5.1939   5.2194   4.7275  3.5788  2.3427  2.1603  1.9435  1.7703&#10; 16     520   6.4268   6.4104   5.8418  4.4074  2.6653  2.3288  2.0293  1.8465&#10; 17     530   7.6299   7.5689   6.9601  5.3072  3.0684  2.5597  2.1563  1.9548&#10; 18     540   8.6030   8.5318   7.9234  6.1732  3.5030  2.8177  2.3077  2.0799&#10; 19     550   9.4620   9.3866   8.7283  6.9871  3.9480  3.0762  2.4634  2.2032&#10; 20     560  10.2074  10.0775   9.4402  7.7211  4.3929  3.3475  2.6319  2.3239&#10; 21     570  10.4668  10.3800   9.7358  8.0937  4.6863  3.5456  2.7499  2.4151&#10; 22     580  10.6801  10.5651   9.9439  8.4002  4.9343  3.7077  2.8533  2.4826&#10; 23     590  10.8896  10.8426  10.3084  8.8249  5.2337  3.9041  2.9636  2.5708&#10; 24     600  10.9422  10.9354  10.3768  8.8843  5.2660  3.8775  2.9292  2.5464&#10; 25     610  10.5836  10.5202   9.9223  8.3873  4.8423  3.4813  2.6388  2.2992&#10; 26     620   9.4338   9.3364   8.9144  7.0977  3.8649  2.7702  2.1032  1.8811&#10; 27     630   7.7169   7.6263   7.1268  5.3149  2.7358  1.9857  1.5521  1.4281&#10; 28     640   5.4489   5.4942   4.9482  3.4699  1.7938  1.3687  1.1237  1.0436&#10; 29     650   3.1697   3.3857   2.9798  2.0419  1.1621  0.9553  0.8250  0.7715&#10; 30     660   1.6842   1.9811   1.7494  1.2512  0.8270  0.7299  0.6590  0.6182&#10; 31     670   0.8644   1.2072   1.0891  0.8506  0.6589  0.6025  0.5610  0.5258&#10; 32     680   0.4683   0.8124   0.7565  0.6471  0.5664  0.5217  0.4929  0.4651&#10; 33     690   0.2800   0.6149   0.5859  0.5363  0.5038  0.4631  0.4401  0.4158&#10; 34     700   0.1846   0.5057   0.4905  0.4700  0.4586  0.4177  0.4004  0.3769&#10; 35     710   0.1373   0.4475   0.4384  0.4311  0.4304  0.3854  0.3691  0.3489&#10; 36     720   0.1095   0.4121   0.4062  0.4050  0.4102  0.3616  0.3458  0.3268&#10; 37     730   0.0909   0.3897   0.3852  0.3868  0.3971  0.3410  0.3276  0.3103&#10; 38     740   0.0791   0.3749   0.3700  0.3743  0.3865  0.3293  0.3159  0.2969,&#10;      X_Axis var   value&#10; 0       360  60  7.6821&#10; 1       370  60  7.1166&#10; 2       380  60  6.2423&#10; 3       390  60  5.3379&#10; 4       400  60  4.4369&#10; ..      ...  ..     ...&#10; 307     700  25  0.3769&#10; 308     710  25  0.3489&#10; 309     720  25  0.3268&#10; 310     730  25  0.3103&#10; 311     740  25  0.2969&#10; &#10; [312 rows x 3 columns])&#10;```&#10;&#10;```python&#10;mydata = pd.DataFrame(columns=['x', 'y', 'var'])&#10;list_var = np.unique(df_melt['var'])&#10;N = 300&#10;for i in list_var:&#10;    x = df.loc[:, 'X_Axis']&#10;    y = df.loc[:, i]&#10;    f = interpolate.interp1d(x, y)  # , kind='slinear')# kind='linear',&#10;    x_new = np.linspace(np.min(x), np.max(x), N)&#10;    y_new = f(x_new)&#10;    mydata = mydata.append(pd.DataFrame(&#10;        {'x': x_new, 'y': y_new, 'var': np.repeat(i, N)}))&#10;&#10;height = 8&#10;mydata['var'] = pd.Categorical(mydata['var'], categories=np.unique(df_melt['var']), ordered=True)&#10;mydata['spacing'] = mydata['var'].values.codes*height&#10;&#10;labels = np.unique(df_melt['var'])&#10;breaks = np.arange(0, len(labels)*height, height)&#10;&#10;base_plot = (ggplot())&#10;for i in np.unique(df_melt['var'])[::-1]:&#10;    mydata_temp = mydata[mydata['var'] == i]&#10;    base_plot = (base_plot +&#10;                 geom_linerange(mydata_temp, aes(x='x', ymin='spacing', ymax='y+spacing', color='y'), size=1) +&#10;                 geom_line(mydata_temp, aes(x='x', y='y+spacing'), color=&quot;black&quot;, size=0.5))&#10;base_plot = (base_plot+scale_color_cmap(name='Spectral_r') +&#10;             scale_y_continuous(breaks=breaks, labels=labels) +&#10;             guides(color=guide_colorbar(title='value')) +&#10;             theme(dpi=100, figure_size=(6, 5)))&#10;print(base_plot)&#10;&#10;```&#10;```&#10;&amp;lt;Figure size 600x500 with 1 Axes&amp;gt;&#10;```&#10;&#10;" />
  </outline>
  </body>
</opml>