<?xml version='1.0'?>
<opml version='2.0'>
  <head>
    <ownerEmail>
      quincy.zou@gmail.com
    </ownerEmail>
  </head>
  <body>
  <outline text="图5-1-5 残差分析图&#10;" _note="import pandas as pd&#10;import numpy as np&#10;from plotnine import *&#10;import statsmodels.api as sm&#10;&#10;df = pd.read_csv('Residual_Analysis_Data.csv')&#10;df&#10;&#10;```&#10;```&#10;     x          y1          y2          y3          y4          y5&#10;0    1    4.600887    6.079108    5.466778    1.000000   10.405390&#10;1    2    5.413366   11.572745   31.118867    2.987810   15.504220&#10;2    3    5.215160   16.585907   33.102697    4.914978   15.929692&#10;3    4    6.623644   19.011471   51.817408    7.857833   14.882990&#10;4    5    5.880258   22.658983   55.665075    9.807141   15.960976&#10;5    6    6.110946   31.751843   60.723009   11.991494   22.582277&#10;6    7    5.760375   33.994606   63.469433   18.914654   22.861964&#10;7    8    6.763769   33.650308   75.543378   24.677964   25.229324&#10;8    9    6.476712   35.554853   84.359966   28.941334   19.433415&#10;9   10    6.708776   34.493439   84.605977   28.625429   35.782519&#10;10  11    6.897440   39.578867   76.279227   39.251856   25.768698&#10;11  12   11.135270   58.269149   92.411943   33.233511   48.652636&#10;12  13    8.217381   57.675863   81.607344   42.087890   47.490195&#10;13  14   10.338627   72.923584   90.971912   54.386558   30.411832&#10;14  15   12.849280   68.433534   88.087055   43.320058   53.321615&#10;15  16   13.037977   82.621540   93.826251   90.244719   57.150078&#10;16  17   20.841309   84.459402  101.343738   81.227859   47.628675&#10;17  18   12.391881   82.011423  103.014144   90.793864   45.149362&#10;18  19   15.858190   89.087940  107.416719   70.930770   46.165530&#10;19  20   15.345486  102.114937  104.318823   66.776304   92.636267&#10;20  21   38.751673   68.109010  110.685755   67.512101   81.012845&#10;21  22   35.882619   96.334042  103.377741   88.577594   84.865680&#10;22  23   24.293104  108.509006  113.580042  116.898234   57.135930&#10;23  24   54.527814   76.672107  105.142620  141.429365   69.223877&#10;24  25   62.858529  107.588807  112.542203  104.022129  110.657671&#10;25  26   43.795458  103.392610  119.339547  161.432961  104.826829&#10;26  27   76.879826  116.453418  113.663436  101.846018   84.935176&#10;27  28   90.973336  106.356447  109.543184  137.056664  106.709526&#10;28  29   96.921761  142.515185  108.689318  175.306350  110.000000&#10;29  30   51.410290  115.148108  110.113333  119.529459  115.823345&#10;30  31  100.045447  110.474622  118.849262  257.288126   93.542193&#10;```&#10;">
    <outline text="(a) 线性回归&#10;" _note="results = sm.OLS(df.y2, df.x).fit()&#10;&#10;df['predicted'] = results.predict()   # 保存预测值&#10;df['residuals'] = df.predicted-df.y2  # 保存残差(有正有负)&#10;df['Abs_Residuals'] = np.abs(df.residuals)  # 保存残差的绝对值&#10;# mydata包含x、y2、predicted、residuals、Abs_Residuals 共5列数值&#10;base_Residuals = (ggplot(df, aes(x='x', y='y2')) +&#10;                  geom_point(aes(fill='Abs_Residuals', size='Abs_Residuals'), shape='o', colour=&quot;black&quot;) +&#10;                  # 使用实际值绘制气泡图，并将气泡的颜色和面积映射到残差的绝对值Abs_Residuals&#10;                  # 添加空心圆圈的预测值&#10;                  geom_line(aes(y='predicted'), color=&quot;lightgrey&quot;) +&#10;                  geom_point(aes(y='predicted'), shape='o') +  # 添加空心圆圈的预测值&#10;                  # 添加实际值和预测值的连接线...&#10;                  geom_segment(aes(xend='x', yend='predicted'), alpha=.2) +&#10;&#10;                  # 填充颜色映射到red单色渐变系&#10;                  scale_fill_gradientn(colors=[&quot;black&quot;, &quot;red&quot;]) +&#10;&#10;                  guides(fill=guide_legend(title=&quot;Rresidual&quot;),&#10;                         size=guide_legend(title=&quot;Rresidual&quot;)) +&#10;                  theme(&#10;    axis_title=element_text(size=18, face=&quot;plain&quot;, color=&quot;black&quot;),&#10;    axis_text=element_text(size=16, face=&quot;plain&quot;, color=&quot;black&quot;),&#10;    # legend_position=&quot;none&quot;,&#10;    aspect_ratio=1.1,&#10;    figure_size=(5, 5),&#10;    dpi=100)&#10;)&#10;print(base_Residuals)&#10;&#10;```&#10;```&#10;&amp;lt;Figure size 500x553.571 with 1 Axes&amp;gt;&#10;```&#10;" />
    <outline text="(b)二次回归&#10;" _note="X = np.column_stack((df.x, df.x**2))&#10;# 使用 sm.add_constant() 在 array 上加入一列常项 1。&#10;X = sm.add_constant(X)&#10;results = sm.OLS(df.y5, X).fit()&#10;&#10;df['predicted'] = results.predict()   # 保存预测值&#10;df['residuals'] = df.predicted-df.y5  # 保存残差(有正有负)&#10;df['Abs_Residuals'] = np.abs(df.residuals)  # 保存残差的绝对值&#10;# mydata包含x、y2、predicted、residuals、Abs_Residuals 共5列数值&#10;base_Residuals = (ggplot(df, aes(x='x', y='y5')) +&#10;                  geom_point(aes(fill='Abs_Residuals', size='Abs_Residuals'), shape='o', colour=&quot;black&quot;) +&#10;                  # 使用实际值绘制气泡图，并将气泡的颜色和面积映射到残差的绝对值Abs_Residuals&#10;                  # geom_smooth(method = &quot;lm&quot;, se = False, color = &quot;lightgrey&quot;) + # 添加灰色的线性拟合曲线&#10;                  # 添加空心圆圈的预测值&#10;                  geom_line(aes(y='predicted'), color=&quot;lightgrey&quot;) +&#10;                  geom_point(aes(y='predicted'), shape='o') +  # 添加空心圆圈的预测值&#10;                  # 添加实际值和预测值的连接线...&#10;                  geom_segment(aes(xend='x', yend='predicted'), alpha=.2) +&#10;&#10;                  # 填充颜色映射到red单色渐变系&#10;                  scale_fill_gradientn(colors=[&quot;black&quot;, &quot;red&quot;]) +&#10;&#10;                  guides(fill=guide_legend(title=&quot;Rresidual&quot;),&#10;                         size=guide_legend(title=&quot;Rresidual&quot;)) +&#10;                  theme(&#10;    axis_title=element_text(size=18, face=&quot;plain&quot;, color=&quot;black&quot;),&#10;    axis_text=element_text(size=16, face=&quot;plain&quot;, color=&quot;black&quot;),&#10;    # legend_position=&quot;none&quot;,&#10;    aspect_ratio=1.1,&#10;    figure_size=(5, 5),&#10;    dpi=100)&#10;)&#10;print(base_Residuals)&#10;&#10;```&#10;```&#10;&amp;lt;Figure size 500x553.571 with 1 Axes&amp;gt;&#10;```&#10;&#10;" />
    </outline>
  </outline>
  </body>
</opml>