<?xml version='1.0'?>
<opml version='2.0'>
  <head>
    <ownerEmail>
      quincy.zou@gmail.com
    </ownerEmail>
  </head>
  <body>
  <outline text="图5-3-1 等高线图&#10;" _note="import pandas as pd&#10;import numpy as np&#10;from plotnine import *&#10;# from plotnine.data import *&#10;import matplotlib.pyplot as plt&#10;import matplotlib as mpl&#10;import matplotlib.pyplot as plt&#10;import matplotlib.tri as tri&#10;import numpy as np&#10;from matplotlib.pyplot import figure, show, rc&#10;mpl.rc('font', size=10)&#10;&#10;&#10;df = pd.DataFrame(np.loadtxt('等高线.txt'))&#10;df = df.reset_index()&#10;&#10;map_df = pd.melt(df, id_vars='index', var_name='var', value_name='value')&#10;map_df['var'] = map_df['var'].astype(int)&#10;&#10;display(df, map_df)&#10;&#10;```&#10;```&#10;     index       0       1       2       3       4       5       6       7  \&#10;0        0  1063.0  1059.0  1053.0  1058.0  1056.0  1063.0  1062.0  1066.0   &#10;1        1  1076.0  1067.0  1060.0  1063.0  1076.0  1078.0  1073.0  1071.0   &#10;2        2  1083.0  1074.0  1065.0  1075.0  1091.0  1090.0  1082.0  1083.0   &#10;3        3  1087.0  1085.0  1079.0  1083.0  1101.0  1102.0  1094.0  1098.0   &#10;4        4  1087.0  1089.0  1089.0  1092.0  1106.0  1111.0  1109.0  1116.0   &#10;..     ...     ...     ...     ...     ...     ...     ...     ...     ...   &#10;296    296  1004.0  1004.0  1004.0  1004.0  1003.0  1003.0  1004.0  1005.0   &#10;297    297   999.0   999.0   999.0   999.0   999.0   999.0  1002.0  1003.0   &#10;298    298   998.0   998.0   997.0   995.0   994.0   996.0  1001.0  1003.0   &#10;299    299   992.0   994.0   993.0   992.0   989.0   988.0   991.0   996.0   &#10;300    300   992.0   996.0   996.0   994.0   991.0   989.0   993.0  1001.0   &#10;&#10;          8  ...     191     192     193     194     195     196     197  \&#10;0    1077.0  ...   855.0   851.0   830.0   823.0   829.0   832.0   838.0   &#10;1    1073.0  ...   840.0   837.0   828.0   825.0   828.0   831.0   834.0   &#10;2    1087.0  ...   822.0   823.0   825.0   825.0   827.0   831.0   835.0   &#10;3    1105.0  ...   823.0   824.0   826.0   829.0   829.0   834.0   838.0   &#10;4    1118.0  ...   821.0   825.0   827.0   829.0   832.0   834.0   838.0   &#10;..      ...  ...     ...     ...     ...     ...     ...     ...     ...   &#10;296  1005.0  ...  1249.0  1261.0  1250.0  1257.0  1267.0  1251.0  1216.0   &#10;297  1002.0  ...  1251.0  1276.0  1277.0  1267.0  1270.0  1255.0  1230.0   &#10;298  1005.0  ...  1285.0  1299.0  1300.0  1290.0  1280.0  1252.0  1227.0   &#10;299  1000.0  ...  1303.0  1317.0  1312.0  1302.0  1287.0  1266.0  1246.0   &#10;300  1005.0  ...  1324.0  1337.0  1327.0  1312.0  1296.0  1287.0  1271.0   &#10;&#10;        198     199     200  &#10;0     844.0   847.0   846.0  &#10;1     836.0   841.0   844.0  &#10;2     836.0   840.0   842.0  &#10;3     840.0   843.0   845.0  &#10;4     839.0   842.0   843.0  &#10;..      ...     ...     ...  &#10;296  1194.0  1201.0  1201.0  &#10;297  1204.0  1202.0  1204.0  &#10;298  1223.0  1205.0  1201.0  &#10;299  1242.0  1222.0  1213.0  &#10;300  1254.0  1246.0  1240.0  &#10;&#10;[301 rows x 202 columns]&#10;```&#10;&#10;```python&#10;ngridx = 100&#10;ngridy = 200&#10;&#10;xi = np.linspace(0, 300, ngridx)&#10;yi = np.linspace(0, 200, ngridy)&#10;&#10;# Perform linear interpolation of the data (x,y)&#10;# on a grid defined by (xi,yi)&#10;triang = tri.Triangulation(map_df['index'], map_df['var'])&#10;interpolator = tri.LinearTriInterpolator(triang, map_df['value'])&#10;Xi, Yi = np.meshgrid(xi, yi)&#10;zi = interpolator(Xi, Yi)&#10;&#10;# -------------------------------------(a)热力分布图 --------------------------------------------------------&#10;fig, ax = plt.subplots(figsize=(5, 4), dpi=90)&#10;&#10;ax.contour(xi, yi, zi, levels=100, linewidths=0.5, colors='none')&#10;cntr = ax.contourf(xi, yi, zi, levels=100, cmap=&quot;Spectral_r&quot;)&#10;&#10;cbar = fig.colorbar(cntr, ax=ax, label=&quot;value&quot;)&#10;cbar.set_ticks(np.arange(500, 3500, 500))&#10;# fig.savefig('等高线图1.pdf')&#10;&#10;```&#10;```&#10;&amp;lt;Figure size 450x360 with 2 Axes&amp;gt;&#10;```&#10;">
    <outline text="(b) 等高线图&#10;" _note="# Note that scipy.interpolate provides means to interpolate data on a grid&#10;# as well. The following would be an alternative to the four lines above:&#10;# from scipy.interpolate import griddata&#10;# zi = griddata((x, y), z, (xi[None,:], yi[:,None]), method='linear')&#10;fig, ax = plt.subplots(figsize=(5, 4), dpi=90)&#10;&#10;ax.contour(xi, yi, zi, levels=10, linewidths=0.5, colors='k')&#10;cntr = ax.contourf(xi, yi, zi, levels=10, cmap=&quot;Spectral_r&quot;)&#10;&#10;fig.colorbar(cntr, ax=ax, label=&quot;value&quot;)&#10;# plt.plot(x, y, 'ko', ms=3)&#10;# ax.axis((-2, 2, -2, 2))&#10;# ax.set_title('' %(npts, ngridx * ngridy))&#10;# fig.savefig('等高线图2.pdf')&#10;&#10;```&#10;```&#10;&amp;lt;matplotlib.colorbar.Colorbar at 0x20b3136d520&amp;gt;&#10;```&#10;" />
    <outline text="(c) 带标签的等高线图&#10;" _note="fig, ax = plt.subplots(figsize=(5, 4), dpi=90)&#10;&#10;CS = ax.contour(xi, yi, zi, levels=10, linewidths=0.5, colors='k')&#10;cntr = ax.contourf(xi, yi, zi, levels=10, cmap=&quot;Spectral_r&quot;)&#10;fig.colorbar(cntr, ax=ax, label=&quot;value&quot;)&#10;CS.levels = [int(val) for val in cntr.levels]&#10;ax.clabel(CS, CS.levels, fmt='%.0f', inline=True,  fontsize=10)&#10;# fig.savefig('等高线图3.pdf')&#10;&#10;```&#10;```&#10;&amp;lt;a list of 11 text.Text objects&amp;gt;&#10;```&#10;&#10;" />
    </outline>
  </outline>
  </body>
</opml>